<?xml version="1.0" encoding="UTF-8" ?>
<pmd version="@project.version@" timestamp="2019-02-06T18:46:53+00:00">
  <file name="/var/www/html/src/Netric/Account/Account.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="223" endline="280" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Account" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Account" method="getUser" priority="3">
      The method getUser() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="300" endline="300" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getAccountUrl has a boolean flag argument $includeProtocol, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/AccountIdentityMapper.php">
    <violation beginline="72" endline="72" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="217" endline="217" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="240" endline="240" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/AccountIdentityMapperInterface.php">
    <violation beginline="22" endline="22" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/Module/DataMapper/DataMapperFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $db. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/Module/DataMapper/ModuleRdbDataMapper.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $db. Configured minimum length is 3.
    </violation>
    <violation beginline="55" endline="55" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $db. Configured minimum length is 3.
    </violation>
    <violation beginline="91" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method save uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="92" endline="92" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/Module/Module.php">
    <violation beginline="17" endline="570" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Account\Module" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Module" priority="3">
      The class Module has an overall complexity of 66 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="147" endline="147" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="247" endline="247" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setSystem has a boolean flag argument $isSystem, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="400" endline="455" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Account\Module" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Module" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 28. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="400" endline="455" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Account\Module" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Module" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 2125764. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="428" endline="430" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fromArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="490" endline="490" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setDirty has a boolean flag argument $dirty, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="565" endline="567" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method arrayToXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/Module/ModuleService.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="49" endline="49" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Account/Module/ModuleServiceFactory.php">
    <violation beginline="22" endline="22" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/Application.php">
    <violation beginline="24" endline="646" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Application" priority="3">
      The class Application has 15 public methods. Consider refactoring Application to keep number of public methods under 10.
    </violation>
    <violation beginline="24" endline="646" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Application" priority="3">
      The class Application has an overall complexity of 59 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="24" endline="646" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="Application" priority="2">
      The class Application has a coupling between objects value of 19. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="49" endline="49" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_GET.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_POST.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_REQUEST.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_REQUEST.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_REQUEST.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="310" endline="330" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="getAccountName" priority="1">
      getAccountName accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="411" endline="418" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method initDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="576" endline="645" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="profileRequest" priority="1">
      profileRequest accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="576" endline="645" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="profileRequest" priority="1">
      The variable $file_name is not named in camelCase.
    </violation>
    <violation beginline="576" endline="645" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application" externalInfoUrl="#" class="Application" method="profileRequest" priority="1">
      The variable $file_name is not named in camelCase.
    </violation>
    <violation beginline="586" endline="586" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $functionAndCalledFrom. Keep variable name length under 20.
    </violation>
    <violation beginline="619" endline="619" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'profileRequest'.
    </violation>
    <violation beginline="620" endline="620" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'profileRequest'.
    </violation>
    <violation beginline="621" endline="621" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'profileRequest'.
    </violation>
    <violation beginline="624" endline="624" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'profileRequest'.
    </violation>
    <violation beginline="625" endline="625" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'profileRequest'.
    </violation>
    <violation beginline="626" endline="626" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'profileRequest'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/ApplicationRdbDataMapper.php">
    <violation beginline="13" endline="709" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="ApplicationRdbDataMapper" priority="3">
      The class ApplicationRdbDataMapper has 14 public methods. Consider refactoring ApplicationRdbDataMapper to keep number of public methods under 10.
    </violation>
    <violation beginline="13" endline="709" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="ApplicationRdbDataMapper" priority="3">
      The class ApplicationRdbDataMapper has an overall complexity of 84 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="77" endline="77" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $defaultAccountDatabase. Keep variable name length under 20.
    </violation>
    <violation beginline="101" endline="101" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="101" endline="117" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="ApplicationRdbDataMapper" method="getAccountById" priority="4">
      The 'getAccountById()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="365" endline="367" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getLastError uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="493" endline="501" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createOrUpdateEmailAlias uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="572" endline="580" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createOrUpdateEmailUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="647" endline="654" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method acquireLock uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/DataMapperInterface.php">
    <violation beginline="30" endline="30" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="30" endline="30" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="DataMapperInterface" method="getAccountById" priority="4">
      The 'getAccountById()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="39" endline="39" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Application" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="DataMapperInterface" method="getAccountByName" priority="4">
      The 'getAccountByName()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/Response/HttpResponse.php">
    <violation beginline="16" endline="590" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Application\Response" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="HttpResponse" priority="3">
      The class HttpResponse has an overall complexity of 53 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="57" endline="121" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $recommendedReasonPhrases. Keep variable name length under 20.
    </violation>
    <violation beginline="378" endline="478" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Application\Response" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="HttpResponse" method="stream" priority="3">
      The method stream() has 101 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="475" endline="477" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method stream uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="483" endline="513" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Application\Response" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="HttpResponse" method="printOutput" priority="3">
      The method printOutput() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="483" endline="513" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Response" externalInfoUrl="#" class="HttpResponse" method="printOutput" priority="1">
      The variable $if_modified_since is not named in camelCase.
    </violation>
    <violation beginline="483" endline="513" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Response" externalInfoUrl="#" class="HttpResponse" method="printOutput" priority="1">
      The variable $if_modified_since is not named in camelCase.
    </violation>
    <violation beginline="502" endline="512" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method printOutput uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="550" endline="589" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Application\Response" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="HttpResponse" method="printBodyJson" priority="3">
      The method printBodyJson() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/Schema/SchemaDataMapperFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/Schema/SchemaManager.php">
    <violation beginline="19" endline="19" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$dataMapper'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/Schema/SchemaRdbDataMapper.php">
    <violation beginline="10" endline="397" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="SchemaRdbDataMapper" priority="3">
      The class SchemaRdbDataMapper has an overall complexity of 59 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="127" endline="194" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="SchemaRdbDataMapper" method="applyBucketDefinition" priority="3">
      The method applyBucketDefinition() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="127" endline="194" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="SchemaRdbDataMapper" method="applyBucketDefinition" priority="3">
      The method applyBucketDefinition() has an NPath complexity of 810. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="205" endline="205" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method applyColumn has a boolean flag argument $createColumns, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="205" endline="255" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="SchemaRdbDataMapper" method="applyColumn" priority="3">
      The method applyColumn() has a Cyclomatic Complexity of 17. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="205" endline="255" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="SchemaRdbDataMapper" method="applyColumn" priority="3">
      The method applyColumn() has an NPath complexity of 2016. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="232" endline="234" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method applyColumn uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="330" endline="351" rule="UnusedPrivateMethod" ruleset="Unused Code Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod" class="SchemaRdbDataMapper" method="applyIndexOld" priority="3">
      Avoid unused private methods such as 'applyIndexOld'.
    </violation>
    <violation beginline="330" endline="330" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$tableName'.
    </violation>
    <violation beginline="330" endline="330" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$foreignKeyName'.
    </violation>
    <violation beginline="330" endline="330" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$keyDefinition'.
    </violation>
    <violation beginline="387" endline="396" rule="UnusedPrivateMethod" ruleset="Unused Code Rules" package="Netric\Application\Schema" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod" class="SchemaRdbDataMapper" method="applyConstraint" priority="3">
      Avoid unused private methods such as 'applyConstraint'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Application/Setup/AccountUpdater.php">
    <violation beginline="13" endline="408" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Application\Setup" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="AccountUpdater" priority="3">
      The class AccountUpdater has an overall complexity of 59 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="134" endline="166" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Application\Setup" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="AccountUpdater" method="getLatestVersion" priority="4">
      The 'getLatestVersion()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="141" endline="141" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $originalCurrentVersion. Keep variable name length under 20.
    </violation>
    <violation beginline="241" endline="241" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$allStart'.
    </violation>
    <violation beginline="298" endline="328" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Application\Setup" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="AccountUpdater" method="processMinorDirs" priority="3">
      The method processMinorDirs() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="298" endline="328" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processMinorDirs" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="298" endline="328" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processMinorDirs" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="298" endline="328" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processMinorDirs" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="298" endline="328" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processMinorDirs" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="337" endline="407" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Application\Setup" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="AccountUpdater" method="processPoints" priority="3">
      The method processPoints() has a Cyclomatic Complexity of 16. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="337" endline="407" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processPoints" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="337" endline="407" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processPoints" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="337" endline="407" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processPoints" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
    <violation beginline="337" endline="407" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Application\Setup" externalInfoUrl="#" class="AccountUpdater" method="processPoints" priority="1">
      The variable $dir_handle is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Authentication/AuthenticationServiceFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Cache/CacheFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Cache/MemcachedCache.php">
    <violation beginline="40" endline="42" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Config/Config.php">
    <violation beginline="69" endline="71" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="140" endline="142" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method toArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="159" endline="159" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$offset'.
    </violation>
    <violation beginline="159" endline="159" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$value'.
    </violation>
    <violation beginline="185" endline="185" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$offset'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Config/ConfigFactory.php">
    <violation beginline="22" endline="22" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="24" endline="24" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $applicationEnvironment. Keep variable name length under 20.
    </violation>
    <violation beginline="25" endline="28" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Config\ConfigLoader' in method 'createService'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Config/ConfigLoader.php">
    <violation beginline="55" endline="82" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Config" externalInfoUrl="#" class="ConfigLoader" method="importFileArray" priority="1">
      The variable $path_parts is not named in camelCase.
    </violation>
    <violation beginline="55" endline="82" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Config" externalInfoUrl="#" class="ConfigLoader" method="importFileArray" priority="1">
      The variable $path_parts is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/AuthenticationController.php">
    <violation beginline="66" endline="66" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="79" endline="79" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Console\Console' in method 'getAuthenticateAction'.
    </violation>
    <violation beginline="106" endline="116" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Controller" externalInfoUrl="#" class="AuthenticationController" method="getLogoutAction" priority="1">
      getLogoutAction accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Console\Console' in method 'getLogoutAction'.
    </violation>
    <violation beginline="133" endline="167" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Controller" externalInfoUrl="#" class="AuthenticationController" method="getCheckinAction" priority="1">
      getCheckinAction accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="133" endline="167" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Controller" externalInfoUrl="#" class="AuthenticationController" method="getCheckinAction" priority="1">
      getCheckinAction accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="133" endline="167" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Controller" externalInfoUrl="#" class="AuthenticationController" method="getCheckinAction" priority="1">
      getCheckinAction accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="145" endline="145" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="152" endline="152" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Console\Console' in method 'getCheckinAction'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/BrowserViewController.php">
    <violation beginline="21" endline="21" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
    <violation beginline="52" endline="52" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
    <violation beginline="94" endline="94" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
    <violation beginline="115" endline="117" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postDeleteViewAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/EntityController.php">
    <violation beginline="26" endline="893" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="EntityController" priority="3">
      The class EntityController has 13 public methods. Consider refactoring EntityController to keep number of public methods under 10.
    </violation>
    <violation beginline="26" endline="893" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityController" priority="3">
      The class EntityController has an overall complexity of 110 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="26" endline="893" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="EntityController" priority="2">
      The class EntityController has a coupling between objects value of 21. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="89" endline="89" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\EntityQuery\FormParser' in method 'postQueryAction'.
    </violation>
    <violation beginline="139" endline="203" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityController" method="getGetAction" priority="3">
      The method getGetAction() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="139" endline="203" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityController" method="getGetAction" priority="3">
      The method getGetAction() has an NPath complexity of 660. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="171" endline="178" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getGetAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="272" endline="319" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityController" method="getRemoveAction" priority="3">
      The method getRemoveAction() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="444" endline="496" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityController" method="savePendingObjectMultiObjects" priority="3">
      The method savePendingObjectMultiObjects() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="459" endline="459" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $waitingObjectFieldName. Keep variable name length under 20.
    </violation>
    <violation beginline="536" endline="538" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postUpdateEntityDefAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="567" endline="567" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
    <violation beginline="770" endline="845" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityController" method="postSaveGroupAction" priority="3">
      The method postSaveGroupAction() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="770" endline="845" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityController" method="postSaveGroupAction" priority="3">
      The method postSaveGroupAction() has an NPath complexity of 256. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="773" endline="773" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
    <violation beginline="818" endline="820" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postSaveGroupAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="830" endline="832" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postSaveGroupAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/FilesController.php">
    <violation beginline="28" endline="377" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="FilesController" priority="2">
      The class FilesController has a coupling between objects value of 13. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="57" endline="57" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="90" endline="229" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="FilesController" method="postUploadAction" priority="3">
      The method postUploadAction() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="90" endline="229" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="FilesController" method="postUploadAction" priority="3">
      The method postUploadAction() has an NPath complexity of 456. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="90" endline="229" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="FilesController" method="postUploadAction" priority="3">
      The method postUploadAction() has 140 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="144" endline="144" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$filename'.
    </violation>
    <violation beginline="153" endline="156" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postUploadAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="220" endline="222" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postUploadAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="244" endline="335" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Controller" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="FilesController" method="getDownloadAction" priority="3">
      The method getDownloadAction() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="333" endline="333" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\FileSystem\FileStreamWrapper' in method 'getDownloadAction'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/ModuleController.php">
    <violation beginline="48" endline="48" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
    <violation beginline="76" endline="78" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postSaveAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="94" endline="94" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="108" endline="110" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postDeleteAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/PermissionController.php">
    <violation beginline="130" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method postSaveDaclEntriesAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/TestController.php">
    <violation beginline="58" endline="58" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$request'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Controller/WorkersController.php">
    <violation beginline="86" endline="88" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method consoleProcessAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="114" endline="116" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method consoleProcessAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="171" endline="173" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method consoleScheduleAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="219" endline="222" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method queueScheduledJobs uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Crypt/BlockCipher.php">
    <violation beginline="31" endline="31" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$cipher'.
    </violation>
    <violation beginline="38" endline="38" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$mode'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Crypt/VaultService.php">
    <violation beginline="19" endline="19" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$key'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Crypt/VaultServiceFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/DataMapperAbstract.php">
    <violation beginline="61" endline="61" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method returnError has a boolean flag argument $retVal, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Db/Relational/AbstractRelationalDb.php">
    <violation beginline="10" endline="499" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Db\Relational" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="AbstractRelationalDb" priority="3">
      The class AbstractRelationalDb has 13 public methods. Consider refactoring AbstractRelationalDb to keep number of public methods under 10.
    </violation>
    <violation beginline="312" endline="312" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$colValue'.
    </violation>
    <violation beginline="349" endline="349" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$colCondValue'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Db/Relational/PgsqlDb.php">
    <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setNamespace has a boolean flag argument $createIfMissing, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="116" endline="118" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method columnExists uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Db/Relational/RelationalDbFactory.php">
    <violation beginline="19" endline="19" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $db. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Db/Relational/RelationalDbInterface.php">
    <violation beginline="104" endline="104" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setNamespace has a boolean flag argument $createIfMissing, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ActivityLog.php">
    <violation beginline="23" endline="274" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="ActivityLog" priority="2">
      The class ActivityLog has a coupling between objects value of 14. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="88" endline="243" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="ActivityLog" method="log" priority="3">
      The method log() has a Cyclomatic Complexity of 29. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="88" endline="243" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="ActivityLog" method="log" priority="3">
      The method log() has an NPath complexity of 648000. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="88" endline="243" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="ActivityLog" method="log" priority="3">
      The method log() has 156 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="107" endline="107" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Entity\Entity' in method 'log'.
    </violation>
    <violation beginline="191" endline="191" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Entity\Entity' in method 'log'.
    </violation>
    <violation beginline="193" endline="195" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method log uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="252" endline="252" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getActivityTypeGroup has a boolean flag argument $createIfMissing, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ActivityLogFactory.php">
    <violation beginline="19" endline="19" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/BrowserView/BrowserView.php">
    <violation beginline="38" endline="38" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="66" endline="66" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$filterKey'.
    </violation>
    <violation beginline="108" endline="108" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$userid'.
    </violation>
    <violation beginline="148" endline="207" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\BrowserView" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="BrowserView" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 22. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="148" endline="207" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\BrowserView" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="BrowserView" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 110592. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="214" endline="214" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="358" endline="358" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setSystem has a boolean flag argument $isSystem, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/BrowserView/BrowserViewService.php">
    <violation beginline="23" endline="533" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Entity\BrowserView" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="BrowserViewService" priority="3">
      The class BrowserViewService has an overall complexity of 64 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="348" endline="351" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveView uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/BrowserView/BrowserViewServiceFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/DataMapper/DataMapperFactory.php">
    <violation beginline="18" endline="18" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/DataMapper/EntityRdbDataMapper.php">
    <violation beginline="24" endline="952" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityRdbDataMapper" priority="3">
      The class EntityRdbDataMapper has an overall complexity of 167 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="24" endline="952" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="EntityRdbDataMapper" priority="2">
      The class EntityRdbDataMapper has a coupling between objects value of 13. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="48" endline="48" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="121" endline="121" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $foreignReferenceValues. Keep variable name length under 20.
    </violation>
    <violation beginline="138" endline="138" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$referencedName'.
    </violation>
    <violation beginline="198" endline="224" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityRdbDataMapper" method="sanitizeDbValuesToEntityFieldValue" priority="3">
      The method sanitizeDbValuesToEntityFieldValue() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="268" endline="268" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="299" endline="399" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityRdbDataMapper" method="saveData" priority="3">
      The method saveData() has a Cyclomatic Complexity of 22. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="299" endline="399" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityRdbDataMapper" method="saveData" priority="3">
      The method saveData() has an NPath complexity of 2520. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="299" endline="399" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityRdbDataMapper" method="saveData" priority="3">
      The method saveData() has 101 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="299" endline="399" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\DataMapper" externalInfoUrl="#" class="EntityRdbDataMapper" method="saveData" priority="1">
      The variable $all_fields is not named in camelCase.
    </violation>
    <violation beginline="299" endline="399" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\DataMapper" externalInfoUrl="#" class="EntityRdbDataMapper" method="saveData" priority="1">
      The variable $all_fields is not named in camelCase.
    </violation>
    <violation beginline="299" endline="399" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\DataMapper" externalInfoUrl="#" class="EntityRdbDataMapper" method="saveData" priority="1">
      The variable $all_fields is not named in camelCase.
    </violation>
    <violation beginline="328" endline="349" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveData uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="458" endline="540" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityRdbDataMapper" method="updateObjectAssociations" priority="3">
      The method updateObjectAssociations() has a Cyclomatic Complexity of 16. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="478" endline="478" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$otid'.
    </violation>
    <violation beginline="482" endline="488" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method updateObjectAssociations uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="521" endline="538" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method updateObjectAssociations uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="548" endline="648" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityRdbDataMapper" method="getDataToInsertFromEntity" priority="3">
      The method getDataToInsertFromEntity() has a Cyclomatic Complexity of 39. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="548" endline="648" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityRdbDataMapper" method="getDataToInsertFromEntity" priority="3">
      The method getDataToInsertFromEntity() has an NPath complexity of 559. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="548" endline="648" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityRdbDataMapper" method="getDataToInsertFromEntity" priority="3">
      The method getDataToInsertFromEntity() has 101 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="548" endline="648" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\DataMapper" externalInfoUrl="#" class="EntityRdbDataMapper" method="getDataToInsertFromEntity" priority="1">
      The variable $all_fields is not named in camelCase.
    </violation>
    <violation beginline="548" endline="648" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\DataMapper" externalInfoUrl="#" class="EntityRdbDataMapper" method="getDataToInsertFromEntity" priority="1">
      The variable $all_fields is not named in camelCase.
    </violation>
    <violation beginline="580" endline="582" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDataToInsertFromEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="583" endline="585" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDataToInsertFromEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="592" endline="594" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDataToInsertFromEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="600" endline="602" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDataToInsertFromEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="624" endline="627" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDataToInsertFromEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="671" endline="674" rule="UnusedPrivateMethod" ruleset="Unused Code Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod" class="EntityRdbDataMapper" method="serialize" priority="3">
      Avoid unused private methods such as 'serialize'.
    </violation>
    <violation beginline="685" endline="764" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityRdbDataMapper" method="getForeignKeyDataFromDb" priority="3">
      The method getForeignKeyDataFromDb() has a Cyclomatic Complexity of 16. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="697" endline="700" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getForeignKeyDataFromDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="731" endline="734" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getForeignKeyDataFromDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="773" endline="773" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="829" endline="893" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityRdbDataMapper" method="updateOldReferences" priority="3">
      The method updateOldReferences() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="831" endline="831" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
    <violation beginline="883" endline="885" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method updateOldReferences uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="911" endline="911" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$data'.
    </violation>
    <violation beginline="925" endline="925" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/DataMapperAbstract.php">
    <violation beginline="27" endline="809" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="DataMapperAbstract" priority="3">
      The class DataMapperAbstract has an overall complexity of 101 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="27" endline="809" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="DataMapperAbstract" priority="2">
      The class DataMapperAbstract has a coupling between objects value of 24. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="115" endline="115" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="156" endline="156" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="173" endline="173" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="182" endline="291" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="DataMapperAbstract" method="save" priority="3">
      The method save() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="182" endline="291" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="DataMapperAbstract" method="save" priority="3">
      The method save() has an NPath complexity of 1536. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="182" endline="291" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="DataMapperAbstract" method="save" priority="3">
      The method save() has 110 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="300" endline="300" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="300" endline="331" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="DataMapperAbstract" method="getById" priority="4">
      The 'getById()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="462" endline="462" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method delete has a boolean flag argument $forceHard, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="492" endline="519" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method delete uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="547" endline="657" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="DataMapperAbstract" method="updateForeignKeyNames" priority="3">
      The method updateForeignKeyNames() has a Cyclomatic Complexity of 24. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="547" endline="657" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="DataMapperAbstract" method="updateForeignKeyNames" priority="3">
      The method updateForeignKeyNames() has 111 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="580" endline="580" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Entity\Entity' in method 'updateForeignKeyNames'.
    </violation>
    <violation beginline="590" endline="593" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method updateForeignKeyNames uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="605" endline="605" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Entity\Entity' in method 'updateForeignKeyNames'.
    </violation>
    <violation beginline="615" endline="618" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method updateForeignKeyNames uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="776" endline="776" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Ramsey\Uuid\Uuid' in method 'setGlobalId'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/DataMapperInterface.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="24" endline="24" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="DataMapperInterface" method="getById" priority="4">
      The 'getById()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="55" endline="55" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method delete has a boolean flag argument $forceHard, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="92" endline="92" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="101" endline="101" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Entity.php">
    <violation beginline="16" endline="1155" rule="ExcessiveClassLength" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasslength" class="Entity" priority="3">
      The class Entity has 1140 lines of code. Current threshold is 1000. Avoid really long classes.
    </violation>
    <violation beginline="16" endline="1155" rule="TooManyMethods" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanymethods" class="Entity" priority="3">
      The class Entity has 27 non-getter- and setter-methods. Consider refactoring Entity to keep number of methods under 25.
    </violation>
    <violation beginline="16" endline="1155" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Entity" priority="3">
      The class Entity has 25 public methods. Consider refactoring Entity to keep number of public methods under 10.
    </violation>
    <violation beginline="16" endline="1155" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Entity" priority="3">
      The class Entity has an overall complexity of 210 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="16" endline="1155" rule="NumberOfChildren" ruleset="Design Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/design.html#numberofchildren" class="Entity" priority="2">
      The class Entity has 20 children. Consider to rebalance this class hierarchy to keep number of children under 15.
    </violation>
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="116" endline="116" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="208" endline="261" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="setValue" priority="3">
      The method setValue() has a Cyclomatic Complexity of 21. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="251" endline="256" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="270" endline="315" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="addMultiValue" priority="3">
      The method addMultiValue() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="436" endline="436" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method fromArray has a boolean flag argument $onlyProvidedFields, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="436" endline="500" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 19. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="436" endline="500" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Entity" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 2814. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="480" endline="487" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fromArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="507" endline="564" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="toArray" priority="3">
      The method toArray() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="507" endline="564" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Entity" method="toArray" priority="3">
      The method toArray() has an NPath complexity of 246. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="571" endline="571" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="581" endline="581" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Entity\Entity' in method 'beforeSave'.
    </violation>
    <violation beginline="601" endline="601" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="610" endline="610" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="624" endline="624" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="633" endline="633" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="644" endline="644" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="644" endline="644" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$sm'.
    </violation>
    <violation beginline="653" endline="653" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="664" endline="664" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="664" endline="664" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$sm'.
    </violation>
    <violation beginline="680" endline="680" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$log'.
    </violation>
    <violation beginline="777" endline="826" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="getChangeLogDescription" priority="3">
      The method getChangeLogDescription() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="777" endline="826" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Entity" method="getChangeLogDescription" priority="3">
      The method getChangeLogDescription() has an NPath complexity of 308. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="892" endline="901" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method decodeObjRef uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="898" endline="900" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method decodeObjRef uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="904" endline="906" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method decodeObjRef uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="917" endline="917" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="969" endline="969" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getObjRef has a boolean flag argument $includeName, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="987" endline="1020" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="processTempFiles" priority="3">
      The method processTempFiles() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="1048" endline="1048" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setHasComments has a boolean flag argument $added, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="1071" endline="1116" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Entity" method="updateFollowers" priority="3">
      The method updateFollowers() has a Cyclomatic Complexity of 17. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityAggregatorFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityFactory.php">
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="42" endline="42" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$obj'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityFactoryFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityFactoryInterface.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityInterface.php">
    <violation beginline="28" endline="28" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="52" endline="52" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="115" endline="115" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="122" endline="122" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityLoader.php">
    <violation beginline="11" endline="319" rule="CamelCasePropertyName" ruleset="Controversial Rules" package="Netric\Entity" externalInfoUrl="#" class="EntityLoader" priority="1">
      The property $m_pInstance is not named in camelCase.
    </violation>
    <violation beginline="62" endline="62" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="83" endline="83" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="105" endline="105" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="109" endline="111" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method isLoaded uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="121" endline="121" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="135" endline="135" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="156" endline="156" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'get'.
    </violation>
    <violation beginline="163" endline="163" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'get'.
    </violation>
    <violation beginline="170" endline="172" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="203" endline="203" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'getByGuid'.
    </violation>
    <violation beginline="210" endline="210" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'getByGuid'.
    </violation>
    <violation beginline="283" endline="283" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method delete has a boolean flag argument $forceHard, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="296" endline="296" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="302" endline="302" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ret'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityLoaderFactory.php">
    <violation beginline="22" endline="22" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityMaintainerService.php">
    <violation beginline="68" endline="68" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/EntityMaintainerServiceFactory.php">
    <violation beginline="28" endline="28" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="33" endline="33" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Forms.php">
    <violation beginline="54" endline="110" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Forms" method="getDeviceForms" priority="3">
      The method getDeviceForms() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="54" endline="110" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Forms" method="getDeviceForms" priority="3">
      The method getDeviceForms() has an NPath complexity of 972. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="128" endline="177" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Forms" method="getFormUiXml" priority="3">
      The method getFormUiXml() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="271" endline="329" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Forms" method="saveForm" priority="3">
      The method saveForm() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="271" endline="329" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Forms" method="saveForm" priority="3">
      The method saveForm() has an NPath complexity of 216. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="293" endline="293" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$device'.
    </violation>
    <violation beginline="301" endline="304" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/FormsFactory.php">
    <violation beginline="19" endline="19" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Notifier/Notifier.php">
    <violation beginline="98" endline="98" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Entity\Entity' in method 'send'.
    </violation>
    <violation beginline="154" endline="157" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Entity\Entity' in method 'markNotificationsSeen'.
    </violation>
    <violation beginline="201" endline="207" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNotification uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/ActivityEntity.php">
    <violation beginline="39" endline="39" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/ActivityFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/CaseEntity.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="33" endline="33" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="42" endline="42" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/CaseFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/CommentEntity.php">
    <violation beginline="26" endline="88" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="CommentEntity" method="onBeforeSave" priority="3">
      The method onBeforeSave() has a Cyclomatic Complexity of 18. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="26" endline="88" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="CommentEntity" method="onBeforeSave" priority="3">
      The method onBeforeSave() has an NPath complexity of 204. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="33" endline="33" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Entity\Entity' in method 'onBeforeSave'.
    </violation>
    <violation beginline="95" endline="95" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="104" endline="104" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/CommentFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/CustomerFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/DashboardEntity.php">
    <violation beginline="28" endline="28" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getObjRef has a boolean flag argument $includeName, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/DashboardFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/EmailAccountEntity.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/EmailAccountFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/EmailMessageEntity.php">
    <violation beginline="36" endline="626" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EmailMessageEntity" priority="3">
      The class EmailMessageEntity has an overall complexity of 72 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="36" endline="626" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="EmailMessageEntity" priority="2">
      The class EmailMessageEntity has a coupling between objects value of 19. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="90" endline="90" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="104" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method onBeforeSave uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="114" endline="114" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="125" endline="130" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method onAfterSave uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="140" endline="140" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="176" endline="176" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
    <violation beginline="182" endline="182" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $cc. Configured minimum length is 3.
    </violation>
    <violation beginline="242" endline="316" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EmailMessageEntity" method="fromMailMessage" priority="3">
      The method fromMailMessage() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="242" endline="316" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EmailMessageEntity" method="fromMailMessage" priority="3">
      The method fromMailMessage() has an NPath complexity of 1536. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="308" endline="310" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fromMailMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="311" endline="315" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fromMailMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="403" endline="403" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Message' in method 'fromMailMessageMultiPart'.
    </violation>
    <violation beginline="569" endline="617" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\ObjType" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EmailMessageEntity" method="updateThreadFromMessage" priority="3">
      The method updateThreadFromMessage() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/EmailMessageFactory.php">
    <violation beginline="28" endline="28" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/EmailThreadEntity.php">
    <violation beginline="59" endline="59" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="68" endline="68" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="84" endline="84" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="141" endline="141" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method removeMessages has a boolean flag argument $hard, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/EmailThreadFactory.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/FileEntity.php">
    <violation beginline="43" endline="43" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="52" endline="52" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="61" endline="61" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/FileFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/FolderEntity.php">
    <violation beginline="56" endline="56" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="86" endline="86" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="95" endline="95" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="126" endline="128" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getFullPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/FolderFactory.php">
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/MemberEntity.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="32" endline="32" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="41" endline="41" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/MemberFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/NotificationEntity.php">
    <violation beginline="38" endline="38" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="47" endline="47" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$objRef'.
    </violation>
    <violation beginline="77" endline="77" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="101" endline="101" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Entity\Entity' in method 'sendEmailNotification'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/NotificationFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/ProjectEntity.php">
    <violation beginline="57" endline="57" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="66" endline="66" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="75" endline="75" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/ProjectFactory.php">
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/TaskEntity.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="33" endline="33" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="42" endline="42" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="57" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getIconName uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/TaskFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/UserEntity.php">
    <violation beginline="74" endline="74" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="94" endline="94" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="117" endline="117" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="197" endline="197" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setIsAdmin has a boolean flag argument $isAdmin, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="201" endline="203" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setIsAdmin uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/UserFactory.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/UserTeamEntity.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="32" endline="32" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="41" endline="41" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/UserTeamFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/WorkerJobFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/WorkflowActionEntity.php">
    <violation beginline="22" endline="22" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="31" endline="31" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="40" endline="40" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/WorkflowActionFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/WorkflowEntity.php">
    <violation beginline="22" endline="22" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="31" endline="31" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="40" endline="40" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/ObjType/WorkflowFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrenceDataMapperFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="27" endline="27" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrenceIdentityMapper.php">
    <violation beginline="61" endline="61" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="133" endline="135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveFromEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="194" endline="194" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="198" endline="200" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getLoadedPattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrenceIdentityMapperFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrencePattern.php">
    <violation beginline="17" endline="1268" rule="ExcessiveClassLength" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasslength" class="RecurrencePattern" priority="3">
      The class RecurrencePattern has 1252 lines of code. Current threshold is 1000. Avoid really long classes.
    </violation>
    <violation beginline="17" endline="1268" rule="TooManyFields" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanyfields" class="RecurrencePattern" priority="3">
      The class RecurrencePattern has 20 fields. Consider redesigning RecurrencePattern to keep the number of fields under 15.
    </violation>
    <violation beginline="17" endline="1268" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="RecurrencePattern" priority="3">
      The class RecurrencePattern has an overall complexity of 194 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="139" endline="139" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="202" endline="284" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 19. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="202" endline="284" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrencePattern" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 262144. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="357" endline="357" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="397" endline="397" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setSeriesLocked has a boolean flag argument $locked, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="413" endline="415" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method isSeriesLocked uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="544" endline="544" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setDayOfWeek has a boolean flag argument $on, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="544" endline="544" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $on. Configured minimum length is 3.
    </violation>
    <violation beginline="548" endline="550" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setDayOfWeek uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="598" endline="624" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="isChanged" priority="3">
      The method isChanged() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="711" endline="713" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartDaily uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="721" endline="809" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="getNextStartWeekly" priority="3">
      The method getNextStartWeekly() has a Cyclomatic Complexity of 21. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="721" endline="809" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrencePattern" method="getNextStartWeekly" priority="3">
      The method getNextStartWeekly() has an NPath complexity of 2256. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="734" endline="736" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartWeekly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="772" endline="775" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartWeekly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="806" endline="808" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartWeekly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="817" endline="901" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="getNextStartMonthly" priority="3">
      The method getNextStartMonthly() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="841" endline="845" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="846" endline="848" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="875" endline="884" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="898" endline="900" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="908" endline="1004" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="getNextStartMonthlyNth" priority="3">
      The method getNextStartMonthlyNth() has a Cyclomatic Complexity of 20. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="908" endline="1004" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrencePattern" method="getNextStartMonthlyNth" priority="3">
      The method getNextStartMonthlyNth() has an NPath complexity of 888. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="908" endline="1004" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="getNextStartMonthlyNth" priority="1">
      The variable $f_lastwkdayinmonth is not named in camelCase.
    </violation>
    <violation beginline="908" endline="1004" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="getNextStartMonthlyNth" priority="1">
      The variable $f_lastwkdayinmonth is not named in camelCase.
    </violation>
    <violation beginline="917" endline="919" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthlyNth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="973" endline="975" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthlyNth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1001" endline="1003" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartMonthlyNth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1011" endline="1067" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="getNextStartYearly" priority="3">
      The method getNextStartYearly() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="1011" endline="1067" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrencePattern" method="getNextStartYearly" priority="3">
      The method getNextStartYearly() has an NPath complexity of 432. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="1026" endline="1028" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartYearly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1042" endline="1044" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartYearly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1064" endline="1066" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartYearly uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1074" endline="1181" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="getNextStartYearlyNth" priority="3">
      The method getNextStartYearlyNth() has a Cyclomatic Complexity of 25. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="1074" endline="1181" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrencePattern" method="getNextStartYearlyNth" priority="3">
      The method getNextStartYearlyNth() has an NPath complexity of 10656. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="1074" endline="1181" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="RecurrencePattern" method="getNextStartYearlyNth" priority="3">
      The method getNextStartYearlyNth() has 108 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="1074" endline="1181" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="getNextStartYearlyNth" priority="1">
      The variable $f_lastwkdayinmonth is not named in camelCase.
    </violation>
    <violation beginline="1074" endline="1181" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="getNextStartYearlyNth" priority="1">
      The variable $f_lastwkdayinmonth is not named in camelCase.
    </violation>
    <violation beginline="1101" endline="1103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartYearlyNth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1151" endline="1153" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartYearlyNth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1178" endline="1180" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextStartYearlyNth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1188" endline="1244" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrencePattern" method="validatePattern" priority="3">
      The method validatePattern() has a Cyclomatic Complexity of 22. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="1201" endline="1203" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method validatePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1208" endline="1210" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method validatePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1215" endline="1217" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method validatePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1222" endline="1224" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method validatePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1229" endline="1231" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method validatePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1236" endline="1238" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method validatePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="1252" endline="1267" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="dateIsLastWkDayInMonth" priority="1">
      The variable $date_cur is not named in camelCase.
    </violation>
    <violation beginline="1252" endline="1267" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="dateIsLastWkDayInMonth" priority="1">
      The variable $date_next is not named in camelCase.
    </violation>
    <violation beginline="1252" endline="1267" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="dateIsLastWkDayInMonth" priority="1">
      The variable $date_next is not named in camelCase.
    </violation>
    <violation beginline="1252" endline="1267" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="dateIsLastWkDayInMonth" priority="1">
      The variable $date_cur is not named in camelCase.
    </violation>
    <violation beginline="1252" endline="1267" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="dateIsLastWkDayInMonth" priority="1">
      The variable $date_next is not named in camelCase.
    </violation>
    <violation beginline="1252" endline="1267" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Entity\Recurrence" externalInfoUrl="#" class="RecurrencePattern" method="dateIsLastWkDayInMonth" priority="1">
      The variable $date_cur is not named in camelCase.
    </violation>
    <violation beginline="1260" endline="1262" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method dateIsLastWkDayInMonth uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrenceRdbDataMapper.php">
    <violation beginline="44" endline="44" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
    <violation beginline="64" endline="173" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrenceRdbDataMapper" method="save" priority="3">
      The method save() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="64" endline="173" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrenceRdbDataMapper" method="save" priority="3">
      The method save() has an NPath complexity of 384. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="64" endline="173" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="RecurrenceRdbDataMapper" method="save" priority="3">
      The method save() has 110 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="121" endline="121" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$colValue'.
    </violation>
    <violation beginline="200" endline="273" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrenceRdbDataMapper" method="load" priority="3">
      The method load() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="200" endline="273" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="RecurrenceRdbDataMapper" method="load" priority="3">
      The method load() has an NPath complexity of 257. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="335" endline="337" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getLastError uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrenceSeriesManager.php">
    <violation beginline="22" endline="391" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="RecurrenceSeriesManager" priority="2">
      The class RecurrenceSeriesManager has a coupling between objects value of 13. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="80" endline="80" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
    <violation beginline="217" endline="294" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Entity\Recurrence" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="RecurrenceSeriesManager" method="createInstancesFromQuery" priority="3">
      The method createInstancesFromQuery() has a Cyclomatic Complexity of 18. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="259" endline="264" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createInstancesFromQuery uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Recurrence/RecurrenceSeriesManagerFactory.php">
    <violation beginline="28" endline="28" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="34" endline="34" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $entityDefinitionLoader. Keep variable name length under 20.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Entity/Validator/EntityValidatorFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/DataMapper/DataMapperAbstract.php">
    <violation beginline="164" endline="164" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$fld'.
    </violation>
    <violation beginline="178" endline="197" rule="UnusedPrivateMethod" ruleset="Unused Code Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod" class="DataMapperAbstract" method="setSysAggregates" priority="3">
      Avoid unused private methods such as 'setSysAggregates'.
    </violation>
    <violation beginline="187" endline="187" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$name'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/DataMapper/DataMapperFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/DataMapper/EntityDefinitionRdbDataMapper.php">
    <violation beginline="15" endline="1037" rule="ExcessiveClassLength" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasslength" class="EntityDefinitionRdbDataMapper" priority="3">
      The class EntityDefinitionRdbDataMapper has 1023 lines of code. Current threshold is 1000. Avoid really long classes.
    </violation>
    <violation beginline="15" endline="1037" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityDefinitionRdbDataMapper" priority="3">
      The class EntityDefinitionRdbDataMapper has an overall complexity of 198 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="42" endline="248" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityDefinitionRdbDataMapper" method="fetchByName" priority="3">
      The method fetchByName() has a Cyclomatic Complexity of 51. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="42" endline="248" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityDefinitionRdbDataMapper" method="fetchByName" priority="3">
      The method fetchByName() has an NPath complexity of 107212978956. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="42" endline="248" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityDefinitionRdbDataMapper" method="fetchByName" priority="3">
      The method fetchByName() has 207 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="293" endline="339" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityDefinitionRdbDataMapper" method="saveDef" priority="3">
      The method saveDef() has a Cyclomatic Complexity of 15. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="293" endline="339" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityDefinitionRdbDataMapper" method="saveDef" priority="3">
      The method saveDef() has an NPath complexity of 16384. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="323" endline="327" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveDef uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="346" endline="363" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="#" class="EntityDefinitionRdbDataMapper" method="saveFields" priority="1">
      The variable $sort_order is not named in camelCase.
    </violation>
    <violation beginline="346" endline="363" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="#" class="EntityDefinitionRdbDataMapper" method="saveFields" priority="1">
      The variable $sort_order is not named in camelCase.
    </violation>
    <violation beginline="346" endline="363" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="#" class="EntityDefinitionRdbDataMapper" method="saveFields" priority="1">
      The variable $sort_order is not named in camelCase.
    </violation>
    <violation beginline="356" endline="359" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveFields uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="372" endline="644" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityDefinitionRdbDataMapper" method="saveField" priority="3">
      The method saveField() has a Cyclomatic Complexity of 45. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="372" endline="644" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityDefinitionRdbDataMapper" method="saveField" priority="3">
      The method saveField() has an NPath complexity of 2482176. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="372" endline="644" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityDefinitionRdbDataMapper" method="saveField" priority="3">
      The method saveField() has 273 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="372" endline="644" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="#" class="EntityDefinitionRdbDataMapper" method="saveField" priority="1">
      The parameter $sort_order is not named in camelCase.
    </violation>
    <violation beginline="372" endline="644" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="#" class="EntityDefinitionRdbDataMapper" method="saveField" priority="1">
      The variable $sort_order is not named in camelCase.
    </violation>
    <violation beginline="372" endline="644" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="#" class="EntityDefinitionRdbDataMapper" method="saveField" priority="1">
      The variable $sort_order is not named in camelCase.
    </violation>
    <violation beginline="491" endline="640" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveField uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="674" endline="822" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityDefinitionRdbDataMapper" method="checkObjColumn" priority="3">
      The method checkObjColumn() has a Cyclomatic Complexity of 39. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="674" endline="822" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityDefinitionRdbDataMapper" method="checkObjColumn" priority="3">
      The method checkObjColumn() has an NPath complexity of 376. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="674" endline="822" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityDefinitionRdbDataMapper" method="checkObjColumn" priority="3">
      The method checkObjColumn() has 149 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="683" endline="683" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$fType'.
    </violation>
    <violation beginline="695" endline="711" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method checkObjColumn uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="712" endline="715" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method checkObjColumn uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="749" endline="751" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method checkObjColumn uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="783" endline="786" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method checkObjColumn uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="812" endline="819" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method checkObjColumn uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="909" endline="994" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityDefinitionRdbDataMapper" method="createFieldIndex" priority="3">
      The method createFieldIndex() has a Cyclomatic Complexity of 25. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="909" endline="994" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityDefinitionRdbDataMapper" method="createFieldIndex" priority="3">
      The method createFieldIndex() has an NPath complexity of 704. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="986" endline="986" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$fname'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/EntityDefinition.php">
    <violation beginline="9" endline="659" rule="ExcessivePublicCount" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivepubliccount" class="EntityDefinition" priority="3">
      The class EntityDefinition has 45 public methods and attributes. Consider reducing the number of public items to less than 45.
    </violation>
    <violation beginline="9" endline="659" rule="TooManyFields" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanyfields" class="EntityDefinition" priority="3">
      The class EntityDefinition has 24 fields. Consider redesigning EntityDefinition to keep the number of fields under 15.
    </violation>
    <violation beginline="9" endline="659" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityDefinition" priority="3">
      The class EntityDefinition has an overall complexity of 68 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="9" endline="659" rule="CamelCasePropertyName" ruleset="Controversial Rules" package="Netric\EntityDefinition" externalInfoUrl="#" class="EntityDefinition" priority="1">
      The property $object_table is not named in camelCase.
    </violation>
    <violation beginline="16" endline="16" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="44" endline="44" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$otid'.
    </violation>
    <violation beginline="204" endline="204" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="323" endline="323" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getFields has a boolean flag argument $includeRemoved, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="461" endline="558" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityDefinition" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 25. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="461" endline="558" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityDefinition" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 5308416. The configured NPath complexity threshold is 200.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/EntityDefinitionLoader.php">
    <violation beginline="210" endline="210" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$fld'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/EntityDefinitionLoaderFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityDefinition/Field.php">
    <violation beginline="9" endline="546" rule="TooManyFields" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanyfields" class="Field" priority="3">
      The class Field has 17 fields. Consider redesigning Field to keep the number of fields under 15.
    </violation>
    <violation beginline="9" endline="546" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Field" priority="3">
      The class Field has an overall complexity of 109 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="16" endline="16" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="175" endline="260" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Field" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 33. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="175" endline="260" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Field" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 20480000. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="339" endline="445" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Field" method="getDefault" priority="3">
      The method getDefault() has a Cyclomatic Complexity of 48. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="339" endline="445" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Field" method="getDefault" priority="3">
      The method getDefault() has an NPath complexity of 113750. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="339" endline="445" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityDefinition" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="Field" method="getDefault" priority="3">
      The method getDefault() has 107 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="339" endline="339" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$event'.
    </violation>
    <violation beginline="345" endline="345" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $on. Configured minimum length is 3.
    </violation>
    <violation beginline="364" endline="366" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="375" endline="377" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="392" endline="394" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="420" endline="422" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="428" endline="430" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="438" endline="440" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="452" endline="452" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getDefaultCoalesce has a boolean flag argument $alias, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="452" endline="489" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition" externalInfoUrl="#" class="Field" method="getDefaultCoalesce" priority="1">
      The variable $field_to_pull is not named in camelCase.
    </violation>
    <violation beginline="452" endline="489" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition" externalInfoUrl="#" class="Field" method="getDefaultCoalesce" priority="1">
      The variable $field_to_pull is not named in camelCase.
    </violation>
    <violation beginline="452" endline="489" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition" externalInfoUrl="#" class="Field" method="getDefaultCoalesce" priority="1">
      The variable $field_to_pull is not named in camelCase.
    </violation>
    <violation beginline="452" endline="489" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition" externalInfoUrl="#" class="Field" method="getDefaultCoalesce" priority="1">
      The variable $field_to_pull is not named in camelCase.
    </violation>
    <violation beginline="452" endline="489" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityDefinition" externalInfoUrl="#" class="Field" method="getDefaultCoalesce" priority="1">
      The variable $field_to_pull is not named in camelCase.
    </violation>
    <violation beginline="468" endline="470" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefaultCoalesce uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="473" endline="480" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefaultCoalesce uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="477" endline="479" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDefaultCoalesce uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="530" endline="532" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method offsetSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/DataMapper/EntityGroupingDataMapperFactory.php">
    <violation beginline="18" endline="18" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/DataMapper/EntityGroupingRdbDataMapper.php">
    <violation beginline="22" endline="346" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityGroupingRdbDataMapper" priority="3">
      The class EntityGroupingRdbDataMapper has an overall complexity of 64 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="22" endline="346" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="EntityGroupingRdbDataMapper" priority="2">
      The class EntityGroupingRdbDataMapper has a coupling between objects value of 14. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="152" endline="254" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="3">
      The method getGroupings() has a Cyclomatic Complexity of 28. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="152" endline="254" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="3">
      The method getGroupings() has an NPath complexity of 1163904. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="152" endline="254" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="3">
      The method getGroupings() has 103 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $object_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $object_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $object_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="152" endline="254" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="#" class="EntityGroupingRdbDataMapper" method="getGroupings" priority="1">
      The variable $grouping_field is not named in camelCase.
    </violation>
    <violation beginline="264" endline="345" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityGroupingRdbDataMapper" method="saveGroup" priority="3">
      The method saveGroup() has a Cyclomatic Complexity of 26. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="264" endline="345" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityGroupingRdbDataMapper" method="saveGroup" priority="3">
      The method saveGroup() has an NPath complexity of 1469664. The configured NPath complexity threshold is 200.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/EntityGroupingStateManager.php">
    <violation beginline="59" endline="59" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="86" endline="88" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="136" endline="136" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\EntityGroupings\EntityGroupings' in method 'getFiltersHash'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/EntityGroupings.php">
    <violation beginline="9" endline="415" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityGroupings" priority="3">
      The class EntityGroupings has an overall complexity of 56 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="75" endline="75" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="305" endline="307" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method add uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="339" endline="350" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\EntityGroupings" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="EntityGroupings" method="getById" priority="4">
      The 'getById()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/Group.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="205" endline="230" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityGroupings" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Group" method="getValue" priority="3">
      The method getValue() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="279" endline="281" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getFilteredVal uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="289" endline="289" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setDirty has a boolean flag argument $isDirty, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/Loader.php">
    <violation beginline="91" endline="91" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\EntityGroupings\EntityGroupings' in method 'getFiltersHash'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityGroupings/LoaderFactory.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery.php">
    <violation beginline="17" endline="537" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="EntityQuery" priority="3">
      The class EntityQuery has 14 public methods. Consider refactoring EntityQuery to keep number of public methods under 10.
    </violation>
    <violation beginline="246" endline="246" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="461" endline="463" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="502" endline="536" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQuery" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Aggregation/AbstractAggregation.php">
    <violation beginline="13" endline="98" rule="CamelCasePropertyName" ruleset="Controversial Rules" package="Netric\EntityQuery\Aggregation" externalInfoUrl="#" class="AbstractAggregation" priority="1">
      The property $_name is not named in camelCase.
    </violation>
    <violation beginline="13" endline="98" rule="CamelCasePropertyName" ruleset="Controversial Rules" package="Netric\EntityQuery\Aggregation" externalInfoUrl="#" class="AbstractAggregation" priority="1">
      The property $_field is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/FormParser.php">
    <violation beginline="21" endline="76" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="FormParser" method="buildQuery" priority="3">
      The method buildQuery() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="21" endline="76" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="FormParser" method="buildQuery" priority="3">
      The method buildQuery() has an NPath complexity of 882. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="38" endline="40" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildQuery uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Index/ElasticSearch.php">
    <violation beginline="44" endline="44" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Index/EntityQueryIndexRdb.php">
    <violation beginline="19" endline="1062" rule="ExcessiveClassLength" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasslength" class="EntityQueryIndexRdb" priority="3">
      The class EntityQueryIndexRdb has 1044 lines of code. Current threshold is 1000. Avoid really long classes.
    </violation>
    <violation beginline="19" endline="1062" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="EntityQueryIndexRdb" priority="3">
      The class EntityQueryIndexRdb has an overall complexity of 213 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="93" endline="215" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="queryIndex" priority="3">
      The method queryIndex() has a Cyclomatic Complexity of 23. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="93" endline="215" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityQueryIndexRdb" method="queryIndex" priority="3">
      The method queryIndex() has an NPath complexity of 73728. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="93" endline="215" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityQueryIndexRdb" method="queryIndex" priority="3">
      The method queryIndex() has 123 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="251" endline="286" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="processEntitiesRawData" priority="3">
      The method processEntitiesRawData() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="295" endline="470" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="buildConditionStringAndSetParams" priority="3">
      The method buildConditionStringAndSetParams() has a Cyclomatic Complexity of 57. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="295" endline="470" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityQueryIndexRdb" method="buildConditionStringAndSetParams" priority="3">
      The method buildConditionStringAndSetParams() has an NPath complexity of 800. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="295" endline="470" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityQueryIndexRdb" method="buildConditionStringAndSetParams" priority="3">
      The method buildConditionStringAndSetParams() has 176 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="396" endline="396" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$entityDefinition'.
    </violation>
    <violation beginline="440" endline="443" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildConditionStringAndSetParams uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="452" endline="454" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildConditionStringAndSetParams uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="513" endline="551" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="buildConditionWithDateOperators" priority="3">
      The method buildConditionWithDateOperators() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="528" endline="530" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildConditionWithDateOperators uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="560" endline="663" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="buildIsEqual" priority="3">
      The method buildIsEqual() has a Cyclomatic Complexity of 27. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="560" endline="663" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityQueryIndexRdb" method="buildIsEqual" priority="3">
      The method buildIsEqual() has 104 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="571" endline="577" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="584" endline="584" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$refField'.
    </violation>
    <violation beginline="614" endline="616" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="626" endline="629" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="639" endline="641" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="656" endline="658" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="672" endline="800" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="buildIsNotEqual" priority="3">
      The method buildIsNotEqual() has a Cyclomatic Complexity of 28. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="672" endline="800" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityQueryIndexRdb" method="buildIsNotEqual" priority="3">
      The method buildIsNotEqual() has 129 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="703" endline="705" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsNotEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="737" endline="759" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsNotEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="749" endline="751" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsNotEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="752" endline="754" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsNotEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="771" endline="775" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsNotEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="793" endline="795" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildIsNotEqual uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="812" endline="812" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$objectTable'.
    </violation>
    <violation beginline="821" endline="823" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildGroupingQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="824" endline="849" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildGroupingQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="839" endline="841" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildGroupingQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="862" endline="927" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="buildObjectMultiQueryCondition" priority="3">
      The method buildObjectMultiQueryCondition() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="880" endline="882" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildObjectMultiQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="883" endline="924" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildObjectMultiQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="884" endline="884" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Entity\Entity' in method 'buildObjectMultiQueryCondition'.
    </violation>
    <violation beginline="912" endline="914" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildObjectMultiQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="919" endline="922" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method buildObjectMultiQueryCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="978" endline="1043" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityQueryIndexRdb" method="queryAggregation" priority="3">
      The method queryAggregation() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Index/IndexAbstract.php">
    <violation beginline="23" endline="441" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="IndexAbstract" priority="3">
      The class IndexAbstract has an overall complexity of 56 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="23" endline="441" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="IndexAbstract" priority="2">
      The class IndexAbstract has a coupling between objects value of 15. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="81" endline="81" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="149" endline="173" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyUp" priority="1">
      The parameter $this_id is not named in camelCase.
    </violation>
    <violation beginline="149" endline="173" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyUp" priority="1">
      The variable $parent_arr is not named in camelCase.
    </violation>
    <violation beginline="149" endline="173" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyUp" priority="1">
      The variable $this_id is not named in camelCase.
    </violation>
    <violation beginline="149" endline="173" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyUp" priority="1">
      The variable $parent_arr is not named in camelCase.
    </violation>
    <violation beginline="149" endline="149" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$field'.
    </violation>
    <violation beginline="184" endline="189" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyDownGrp" priority="1">
      The parameter $this_id is not named in camelCase.
    </violation>
    <violation beginline="184" endline="189" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyDownGrp" priority="1">
      The variable $children_arr is not named in camelCase.
    </violation>
    <violation beginline="184" endline="189" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyDownGrp" priority="1">
      The variable $this_id is not named in camelCase.
    </violation>
    <violation beginline="184" endline="189" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntityQuery\Index" externalInfoUrl="#" class="IndexAbstract" method="getHeiarchyDownGrp" priority="1">
      The variable $children_arr is not named in camelCase.
    </violation>
    <violation beginline="184" endline="184" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$field'.
    </violation>
    <violation beginline="271" endline="352" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="IndexAbstract" method="sanitizeWhereCondition" priority="3">
      The method sanitizeWhereCondition() has a Cyclomatic Complexity of 21. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="271" endline="352" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery\Index" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="IndexAbstract" method="sanitizeWhereCondition" priority="3">
      The method sanitizeWhereCondition() has an NPath complexity of 2240. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="345" endline="345" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Entity\Entity' in method 'sanitizeWhereCondition'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Index/IndexFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Plugin/EmailMessageQueryPlugin.php">
    <violation beginline="34" endline="34" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="59" endline="63" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method onBeforeExecuteQuery uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="73" endline="73" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="84" endline="84" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Plugin/EmailThreadQueryPlugin.php">
    <violation beginline="34" endline="34" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="74" endline="74" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="85" endline="85" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Plugin/PluginInterface.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="32" endline="32" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Plugin/RecurrenceQueryPlugin.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="40" endline="40" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="40" endline="40" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$sl'.
    </violation>
    <violation beginline="40" endline="40" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$query'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Results.php">
    <violation beginline="181" endline="181" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stats\StatsPublisher' in method 'addEntity'.
    </violation>
    <violation beginline="207" endline="209" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="215" endline="217" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getEntity uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="263" endline="265" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getAggregation uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntityQuery/Where.php">
    <violation beginline="13" endline="386" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\EntityQuery" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Where" priority="3">
      The class Where has 23 public methods. Consider refactoring Where to keep number of public methods under 10.
    </violation>
    <violation beginline="359" endline="385" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntityQuery" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Where" method="getOperatorDateType" priority="3">
      The method getOperatorDateType() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Collection/AbstractCollection.php">
    <violation beginline="33" endline="33" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="136" endline="136" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="386" endline="389" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getImportChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Collection/CollectionFactory.php">
    <violation beginline="54" endline="107" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="CollectionFactory" method="create" priority="3">
      The method create() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="54" endline="107" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="CollectionFactory" method="create" priority="3">
      The method create() has an NPath complexity of 1032. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="54" endline="54" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
    <violation beginline="59" endline="59" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Collection/CollectionFactoryInterface.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Collection/CollectionInterface.php">
    <violation beginline="32" endline="32" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getExportChanged has a boolean flag argument $autoFastForward, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Collection/EntityCollection.php">
    <violation beginline="39" endline="39" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="63" endline="63" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getExportChanged has a boolean flag argument $autoFastForward, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="63" endline="199" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="EntityCollection" method="getExportChanged" priority="3">
      The method getExportChanged() has a Cyclomatic Complexity of 26. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="63" endline="199" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="EntityCollection" method="getExportChanged" priority="3">
      The method getExportChanged() has an NPath complexity of 186628. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="63" endline="199" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="EntityCollection" method="getExportChanged" priority="3">
      The method getExportChanged() has 137 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="98" endline="100" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getExportChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="113" endline="115" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getExportChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Collection/GroupingCollection.php">
    <violation beginline="41" endline="41" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="64" endline="64" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getExportChanged has a boolean flag argument $autoFastForward, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="64" endline="144" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="GroupingCollection" method="getExportChanged" priority="3">
      The method getExportChanged() has a Cyclomatic Complexity of 17. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="64" endline="144" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntitySync\Collection" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="GroupingCollection" method="getExportChanged" priority="3">
      The method getExportChanged() has an NPath complexity of 844. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="83" endline="85" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getExportChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="194" endline="194" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\EntityGroupings\EntityGroupings' in method 'getCommitHeadIdent'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Commit/CommitManager.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="32" endline="32" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Commit/CommitManagerFactory.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Commit/DataMapper/DataMapperFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Commit/DataMapper/DataMapperRdb.php">
    <violation beginline="63" endline="65" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveHead uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="84" endline="86" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getHead uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/DataMapperFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/DataMapperInterface.php">
    <violation beginline="49" endline="49" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method deletePartner has a boolean flag argument $byPartnerId, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/DataMapperRdb.php">
    <violation beginline="43" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method savePartner uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="129" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getPartner uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="165" endline="165" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method deletePartner has a boolean flag argument $byPartnerId, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="171" endline="173" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method deletePartner uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="187" endline="237" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntitySync" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="DataMapperRdb" method="populatePartnerCollections" priority="3">
      The method populatePartnerCollections() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="228" endline="228" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\EntitySync\Collection\CollectionFactory' in method 'populatePartnerCollections'.
    </violation>
    <violation beginline="263" endline="266" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveCollection uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="337" endline="339" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method logExported uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="340" endline="347" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method logExported uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="462" endline="464" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method logImported uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="465" endline="471" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method logImported uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/EntitySync.php">
    <violation beginline="52" endline="52" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
    <violation beginline="142" endline="142" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$objType'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/EntitySyncFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dm. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/EntitySync/Partner.php">
    <violation beginline="28" endline="28" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="93" endline="93" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="220" endline="291" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\EntitySync" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Partner" method="getCollection" priority="3">
      The method getCollection() has a Cyclomatic Complexity of 25. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="220" endline="291" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\EntitySync" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Partner" method="getCollection" priority="3">
      The method getCollection() has an NPath complexity of 2746. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="220" endline="291" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\EntitySync" externalInfoUrl="#" class="Partner" method="getCollection" priority="1">
      The parameter $obj_type is not named in camelCase.
    </violation>
    <violation beginline="220" endline="291" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\EntitySync" externalInfoUrl="#" class="Partner" method="getCollection" priority="1">
      The variable $obj_type is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/AnsFileStore.php">
    <violation beginline="139" endline="144" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="159" endline="161" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="184" endline="190" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method writeFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="225" endline="225" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $ch. Configured minimum length is 3.
    </violation>
    <violation beginline="285" endline="288" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method deleteFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="339" endline="342" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fileExists uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/AnsFileStoreFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/FileStoreFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="33" endline="35" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createService uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/LocalFileStore.php">
    <violation beginline="84" endline="86" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="100" endline="102" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="139" endline="141" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method writeFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="185" endline="187" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method uploadFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="304" endline="309" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getFullLocalPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="370" endline="370" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="390" endline="392" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method explodeIdToPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="411" endline="411" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$allOk'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/LocalFileStoreFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/MogileFileStore.php">
    <violation beginline="109" endline="162" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\FileSystem\FileStore" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="MogileFileStore" method="readFile" priority="3">
      The method readFile() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="109" endline="162" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\FileSystem\FileStore" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="MogileFileStore" method="readFile" priority="3">
      The method readFile() has an NPath complexity of 576. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="139" endline="144" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="159" endline="161" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="186" endline="188" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method writeFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="198" endline="204" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method writeFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="233" endline="235" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method uploadFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="335" endline="337" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fileExists uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStore/MogileFileStoreFactory.php">
    <violation beginline="20" endline="20" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileStreamWrapper.php">
    <violation beginline="101" endline="118" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_open" priority="1">
      The method stream_open is not named in camelCase.
    </violation>
    <violation beginline="101" endline="118" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_open" priority="1">
      The parameter $opened_path is not named in camelCase.
    </violation>
    <violation beginline="101" endline="101" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$path'.
    </violation>
    <violation beginline="101" endline="101" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$mode'.
    </violation>
    <violation beginline="101" endline="101" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$options'.
    </violation>
    <violation beginline="101" endline="101" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$opened_path'.
    </violation>
    <violation beginline="126" endline="140" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_read" priority="1">
      The method stream_read is not named in camelCase.
    </violation>
    <violation beginline="147" endline="150" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_eof" priority="1">
      The method stream_eof is not named in camelCase.
    </violation>
    <violation beginline="157" endline="163" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_stat" priority="1">
      The method stream_stat is not named in camelCase.
    </violation>
    <violation beginline="170" endline="173" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_tell" priority="1">
      The method stream_tell is not named in camelCase.
    </violation>
    <violation beginline="180" endline="184" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_rewind" priority="1">
      The method stream_rewind is not named in camelCase.
    </violation>
    <violation beginline="193" endline="197" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\FileSystem" externalInfoUrl="#" class="FileStreamWrapper" method="stream_seek" priority="1">
      The method stream_seek is not named in camelCase.
    </violation>
    <violation beginline="193" endline="193" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$whence'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileSystem.php">
    <violation beginline="26" endline="621" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\FileSystem" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="FileSystem" priority="3">
      The class FileSystem has 16 public methods. Consider refactoring FileSystem to keep number of public methods under 10.
    </violation>
    <violation beginline="26" endline="621" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\FileSystem" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="FileSystem" priority="3">
      The class FileSystem has an overall complexity of 68 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="26" endline="621" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\FileSystem" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="FileSystem" priority="2">
      The class FileSystem has a coupling between objects value of 17. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="129" endline="139" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method importFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="167" endline="169" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method openFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="179" endline="179" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method deleteFile has a boolean flag argument $purge, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="195" endline="195" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method deleteFolder has a boolean flag argument $purge, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="222" endline="222" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\FileSystem\FileStreamWrapper' in method 'openFileStreamById'.
    </violation>
    <violation beginline="223" endline="225" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method openFileStreamById uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="235" endline="235" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method openFolder has a boolean flag argument $createIfMissing, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="251" endline="253" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method openFolder uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="362" endline="364" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fileIsTemp uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="398" endline="398" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method createFile has a boolean flag argument $overwriteIfExists, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="408" endline="411" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="434" endline="434" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method writeFile has a boolean flag argument $append, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="434" endline="434" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$append'.
    </violation>
    <violation beginline="460" endline="460" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method splitPathToFolderArray has a boolean flag argument $createIfMissing, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="496" endline="499" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method splitPathToFolderArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="598" endline="608" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setRootFolder uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/FileSystemFactory.php">
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/ImageResizer.php">
    <violation beginline="167" endline="167" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\FileSystem\FileStreamWrapper' in method 'downloadToLocalTemp'.
    </violation>
    <violation beginline="188" endline="267" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\FileSystem" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="ImageResizer" method="resizeImage" priority="3">
      The method resizeImage() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="279" endline="279" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getOptimumDimensions has a boolean flag argument $stretch, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="279" endline="321" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\FileSystem" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="ImageResizer" method="getOptimumDimensions" priority="3">
      The method getOptimumDimensions() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/FileSystem/ImageResizerFactory.php">
    <violation beginline="27" endline="27" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Log/Log.php">
    <violation beginline="20" endline="485" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Log" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Log" priority="3">
      The class Log has 11 public methods. Consider refactoring Log to keep number of public methods under 10.
    </violation>
    <violation beginline="20" endline="485" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Log" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Log" priority="3">
      The class Log has an overall complexity of 53 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="136" endline="182" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="writeLog" priority="1">
      writeLog accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="136" endline="182" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="writeLog" priority="1">
      writeLog accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="136" endline="182" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="writeLog" priority="1">
      writeLog accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="136" endline="182" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="writeLog" priority="1">
      writeLog accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="268" endline="359" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Log" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Log" method="phpErrorHandler" priority="3">
      The method phpErrorHandler() has a Cyclomatic Complexity of 16. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="268" endline="359" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Log" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Log" method="phpErrorHandler" priority="3">
      The method phpErrorHandler() has an NPath complexity of 360. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="278" endline="278" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$exception'.
    </violation>
    <violation beginline="281" endline="289" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method phpErrorHandler uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="366" endline="397" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Log" externalInfoUrl="#" class="Log" method="phpUnhandledExceptionHandler" priority="1">
      phpUnhandledExceptionHandler accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="424" endline="424" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setPrintToConsole has a boolean flag argument $print, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="448" endline="448" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$k'.
    </violation>
    <violation beginline="448" endline="448" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$v'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Log/LogInterface.php">
    <violation beginline="126" endline="126" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setPrintToConsole has a boolean flag argument $print, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Log/LogMessage.php">
    <violation beginline="214" endline="214" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $applicationEnvironment. Keep variable name length under 20.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Address.php">
    <violation beginline="27" endline="27" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $emailAddressValidator. Keep variable name length under 20.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/AddressList.php">
    <violation beginline="12" endline="248" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="AddressList" priority="3">
      The class AddressList has 12 public methods. Consider refactoring AddressList to keep number of public methods under 10.
    </violation>
    <violation beginline="69" endline="74" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method addMany uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/DeliveryService.php">
    <violation beginline="28" endline="452" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="DeliveryService" priority="2">
      The class DeliveryService has a coupling between objects value of 20. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="124" endline="127" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method deliverMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="143" endline="146" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method deliverMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="191" endline="194" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getMimeFromBody uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="193" endline="193" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$headers'.
    </violation>
    <violation beginline="275" endline="278" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method importMailParse uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="331" endline="443" rule="UnusedPrivateMethod" ruleset="Unused Code Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod" class="DeliveryService" method="importProcessFilters" priority="3">
      Avoid unused private methods such as 'importProcessFilters'.
    </violation>
    <violation beginline="331" endline="443" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="DeliveryService" method="importProcessFilters" priority="3">
      The method importProcessFilters() has 113 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="331" endline="331" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$email'.
    </violation>
    <violation beginline="331" endline="331" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$dbh'.
    </violation>
    <violation beginline="331" endline="331" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$user'.
    </violation>
    <violation beginline="448" endline="451" rule="UnusedPrivateMethod" ruleset="Unused Code Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod" class="DeliveryService" method="importProcessAutoResp" priority="3">
      Avoid unused private methods such as 'importProcessAutoResp'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/DeliveryServiceFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="28" endline="28" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$user'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/EntityMailer.php">
    <violation beginline="23" endline="23" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$entityLoader'.
    </violation>
    <violation beginline="30" endline="30" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$defaultTransport'.
    </violation>
    <violation beginline="37" endline="37" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$bulkTransport'.
    </violation>
    <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method send has a boolean flag argument $bulk, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="45" endline="45" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$emailMessage'.
    </violation>
    <violation beginline="45" endline="45" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$bulk'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/AbstractAddressList.php">
    <violation beginline="41" endline="41" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="102" endline="102" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'getFieldValue'.
    </violation>
    <violation beginline="111" endline="111" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderValue' in method 'getFieldValue'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/ContentTransferEncoding.php">
    <violation beginline="15" endline="25" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $allowedTransferEncodings. Keep variable name length under 20.
    </violation>
    <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="40" endline="40" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/ContentType.php">
    <violation beginline="33" endline="33" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="74" endline="74" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Mime' in method 'getFieldValue'.
    </violation>
    <violation beginline="76" endline="76" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'getFieldValue'.
    </violation>
    <violation beginline="146" endline="146" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderValue' in method 'addParameter'.
    </violation>
    <violation beginline="149" endline="149" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'addParameter'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/Date.php">
    <violation beginline="21" endline="21" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="36" endline="36" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderValue' in method '__construct'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/GenericHeader.php">
    <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="54" endline="54" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderName' in method 'splitHeaderLine'.
    </violation>
    <violation beginline="58" endline="58" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderValue' in method 'splitHeaderLine'.
    </violation>
    <violation beginline="100" endline="100" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderName' in method 'setFieldName'.
    </violation>
    <violation beginline="126" endline="126" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'setFieldValue'.
    </violation>
    <violation beginline="141" endline="141" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'getFieldValue'.
    </violation>
    <violation beginline="156" endline="156" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Mime' in method 'getEncoding'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/GenericMultiHeader.php">
    <violation beginline="16" endline="16" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="17" endline="17" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/HeaderValue.php">
    <violation beginline="39" endline="39" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $lf. Configured minimum length is 3.
    </violation>
    <violation beginline="40" endline="40" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sp. Configured minimum length is 3.
    </violation>
    <violation beginline="73" endline="73" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $lf. Configured minimum length is 3.
    </violation>
    <violation beginline="74" endline="74" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sp. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/HeaderWrap.php">
    <violation beginline="90" endline="90" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Mime' in method 'mimeEncodeValue'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/MessageId.php">
    <violation beginline="18" endline="18" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="19" endline="19" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="64" endline="64" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderValue' in method 'setId'.
    </violation>
    <violation beginline="95" endline="114" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mail\Header" externalInfoUrl="#" class="MessageId" method="createMessageId" priority="1">
      createMessageId accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="95" endline="114" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mail\Header" externalInfoUrl="#" class="MessageId" method="createMessageId" priority="1">
      createMessageId accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="95" endline="114" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mail\Header" externalInfoUrl="#" class="MessageId" method="createMessageId" priority="1">
      createMessageId accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="95" endline="114" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mail\Header" externalInfoUrl="#" class="MessageId" method="createMessageId" priority="1">
      createMessageId accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="101" endline="103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createMessageId uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="109" endline="111" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createMessageId uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/MimeVersion.php">
    <violation beginline="18" endline="18" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="19" endline="19" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/Received.php">
    <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="24" endline="24" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="38" endline="38" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderValue' in method '__construct'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/Sender.php">
    <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="53" endline="55" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fromString uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="80" endline="80" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'getFieldValue'.
    </violation>
    <violation beginline="98" endline="98" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Mime' in method 'getEncoding'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Header/Subject.php">
    <violation beginline="33" endline="33" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'fromString'.
    </violation>
    <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'fromString'.
    </violation>
    <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'getFieldValue'.
    </violation>
    <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Mime' in method 'getEncoding'.
    </violation>
    <violation beginline="80" endline="80" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\HeaderWrap' in method 'setSubject'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Headers.php">
    <violation beginline="18" endline="503" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Headers" priority="3">
      The class Headers has 16 public methods. Consider refactoring Headers to keep number of public methods under 10.
    </violation>
    <violation beginline="18" endline="503" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Headers" priority="3">
      The class Headers has an overall complexity of 69 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="18" endline="503" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="Headers" priority="2">
      The class Headers has a coupling between objects value of 14. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="60" endline="113" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mail" externalInfoUrl="#" class="Headers" method="fromString" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="60" endline="113" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mail" externalInfoUrl="#" class="Headers" method="fromString" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="174" endline="200" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Headers" method="addHeaders" priority="3">
      The method addHeaders() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="213" endline="213" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $headerFieldNameOrLine. Keep variable name length under 20.
    </violation>
    <violation beginline="226" endline="226" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'addHeaderLine'.
    </violation>
    <violation beginline="229" endline="229" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericMultiHeader' in method 'addHeaderLine'.
    </violation>
    <violation beginline="231" endline="233" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method addHeaderLine uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="232" endline="232" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\GenericHeader' in method 'addHeaderLine'.
    </violation>
    <violation beginline="265" endline="268" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method removeHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="310" endline="312" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="321" endline="323" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="442" endline="444" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method toArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="456" endline="456" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$item'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Message.php">
    <violation beginline="15" endline="574" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Message" priority="3">
      The class Message has an overall complexity of 60 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="15" endline="574" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="Message" priority="2">
      The class Message has a coupling between objects value of 15. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="101" endline="101" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mail\Header\Date' in method 'getHeaders'.
    </violation>
    <violation beginline="333" endline="335" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setSubject uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="362" endline="421" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Message" method="setBody" priority="3">
      The method setBody() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="461" endline="464" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getHeaderByName uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="566" endline="566" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Decode' in method 'fromString'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/AbstractProtocol.php">
    <violation beginline="176" endline="183" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="AbstractProtocol" method="_addLog" priority="1">
      The method _addLog is not named in camelCase.
    </violation>
    <violation beginline="194" endline="214" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="AbstractProtocol" method="_connect" priority="1">
      The method _connect is not named in camelCase.
    </violation>
    <violation beginline="220" endline="225" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="AbstractProtocol" method="_disconnect" priority="1">
      The method _disconnect is not named in camelCase.
    </violation>
    <violation beginline="234" endline="252" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="AbstractProtocol" method="_send" priority="1">
      The method _send is not named in camelCase.
    </violation>
    <violation beginline="261" endline="290" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="AbstractProtocol" method="_receive" priority="1">
      The method _receive is not named in camelCase.
    </violation>
    <violation beginline="303" endline="328" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="AbstractProtocol" method="_expect" priority="1">
      The method _expect is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/Imap.php">
    <violation beginline="11" endline="822" rule="TooManyMethods" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanymethods" class="Imap" priority="3">
      The class Imap has 31 non-getter- and setter-methods. Consider refactoring Imap to keep number of methods under 25.
    </violation>
    <violation beginline="11" endline="822" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Imap" priority="3">
      The class Imap has 27 public methods. Consider refactoring Imap to keep number of public methods under 10.
    </violation>
    <violation beginline="11" endline="822" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Imap" priority="3">
      The class Imap has an overall complexity of 126 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="40" endline="40" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method __construct has a boolean flag argument $ssl, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="64" endline="64" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method connect has a boolean flag argument $ssl, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="64" endline="109" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Imap" method="connect" priority="3">
      The method connect() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="88" endline="88" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'connect'.
    </violation>
    <violation beginline="89" endline="89" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$errno'.
    </violation>
    <violation beginline="89" endline="89" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$errstr'.
    </violation>
    <violation beginline="90" endline="90" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'connect'.
    </violation>
    <violation beginline="117" endline="125" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Imap" method="_nextLine" priority="1">
      The method _nextLine is not named in camelCase.
    </violation>
    <violation beginline="134" endline="138" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Imap" method="_assumedNextLine" priority="1">
      The method _assumedNextLine is not named in camelCase.
    </violation>
    <violation beginline="146" endline="161" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Imap" method="_nextTaggedLine" priority="1">
      The method _nextTaggedLine is not named in camelCase.
    </violation>
    <violation beginline="156" endline="158" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _nextTaggedLine uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="169" endline="255" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Imap" method="_decodeLine" priority="3">
      The method _decodeLine() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="169" endline="255" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Imap" method="_decodeLine" priority="3">
      The method _decodeLine() has an NPath complexity of 434. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="169" endline="255" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Imap" method="_decodeLine" priority="1">
      The method _decodeLine is not named in camelCase.
    </violation>
    <violation beginline="216" endline="218" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _decodeLine uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="268" endline="268" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method readLine has a boolean flag argument $dontParse, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="274" endline="276" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readLine uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="290" endline="290" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method readResponse has a boolean flag argument $dontParse, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="342" endline="344" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendRequest uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="360" endline="360" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method requestAndResponse has a boolean flag argument $dontParse, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="381" endline="383" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method escapeString uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="544" endline="611" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Imap" method="fetch" priority="3">
      The method fetch() has a Cyclomatic Complexity of 20. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="544" endline="611" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Imap" method="fetch" priority="3">
      The method fetch() has an NPath complexity of 2892. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="544" endline="544" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
    <violation beginline="552" endline="554" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fetch uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="577" endline="588" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fetch uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="589" endline="595" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fetch uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="653" endline="653" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method store has a boolean flag argument $silent, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="653" endline="685" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Imap" method="store" priority="3">
      The method store() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="653" endline="653" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
    <violation beginline="721" endline="721" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/Pop3.php">
    <violation beginline="11" endline="402" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Pop3" priority="3">
      The class Pop3 has 16 public methods. Consider refactoring Pop3 to keep number of public methods under 10.
    </violation>
    <violation beginline="11" endline="402" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Pop3" priority="3">
      The class Pop3 has an overall complexity of 52 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="43" endline="43" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method __construct has a boolean flag argument $ssl, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="67" endline="67" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method connect has a boolean flag argument $ssl, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="67" endline="120" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Pop3" method="connect" priority="3">
      The method connect() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="91" endline="91" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'connect'.
    </violation>
    <violation beginline="92" endline="92" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$errno'.
    </violation>
    <violation beginline="92" endline="92" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$errstr'.
    </violation>
    <violation beginline="93" endline="93" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'connect'.
    </violation>
    <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method connect uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="130" endline="130" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'sendRequest'.
    </violation>
    <violation beginline="132" endline="132" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'sendRequest'.
    </violation>
    <violation beginline="145" endline="145" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method readResponse has a boolean flag argument $multiline, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="147" endline="147" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'readResponse'.
    </violation>
    <violation beginline="149" endline="149" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'readResponse'.
    </violation>
    <violation beginline="157" endline="160" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method readResponse uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="190" endline="190" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method request has a boolean flag argument $multiline, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="233" endline="233" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method login has a boolean flag argument $tryApop, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="284" endline="284" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $no. Configured minimum length is 3.
    </violation>
    <violation beginline="338" endline="338" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method top has a boolean flag argument $fallback, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="343" endline="345" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method top uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="357" endline="359" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method top uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/Smtp.php">
    <violation beginline="14" endline="405" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Smtp" priority="3">
      The class Smtp has 13 public methods. Consider refactoring Smtp to keep number of public methods under 10.
    </violation>
    <violation beginline="77" endline="135" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Smtp" method="__construct" priority="3">
      The method __construct() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="77" endline="135" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Protocol" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Smtp" method="__construct" priority="3">
      The method __construct() has an NPath complexity of 270. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="84" endline="86" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="91" endline="93" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="98" endline="100" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="201" endline="213" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Smtp" method="_ehlo" priority="1">
      The method _ehlo is not named in camelCase.
    </violation>
    <violation beginline="244" endline="244" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
    <violation beginline="273" endline="273" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fp. Configured minimum length is 3.
    </violation>
    <violation beginline="381" endline="386" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Smtp" method="_disconnect" priority="1">
      The method _disconnect is not named in camelCase.
    </violation>
    <violation beginline="392" endline="395" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Smtp" method="_startSession" priority="1">
      The method _startSession is not named in camelCase.
    </violation>
    <violation beginline="401" endline="404" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol" externalInfoUrl="#" class="Smtp" method="_stopSession" priority="1">
      The method _stopSession is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/Smtp/Auth/Crammd5.php">
    <violation beginline="45" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="132" endline="135" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Protocol\Smtp\Auth" externalInfoUrl="#" class="Crammd5" method="_hmacMd5" priority="1">
      The method _hmacMd5 is not named in camelCase.
    </violation>
    <violation beginline="132" endline="132" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$block'.
    </violation>
    <violation beginline="134" endline="134" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Zend\Crypt\Hmac' in method '_hmacMd5'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/Smtp/Auth/Login.php">
    <violation beginline="45" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Protocol/Smtp/Auth/Plain.php">
    <violation beginline="45" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/ReceiverService.php">
    <violation beginline="35" endline="613" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="ReceiverService" priority="3">
      The class ReceiverService has an overall complexity of 59 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="35" endline="613" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="ReceiverService" priority="2">
      The class ReceiverService has a coupling between objects value of 26. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="121" endline="143" rule="ExcessiveParameterList" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveparameterlist" class="ReceiverService" method="__construct" priority="3">
      The method __construct has 10 parameters. Consider reducing the number of parameters to less than 10.
    </violation>
    <violation beginline="232" endline="321" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="ReceiverService" method="sendChanges" priority="3">
      The method sendChanges() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="267" endline="269" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="274" endline="276" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="285" endline="288" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="304" endline="307" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="332" endline="478" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="ReceiverService" method="receiveChanges" priority="3">
      The method receiveChanges() has a Cyclomatic Complexity of 26. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="332" endline="478" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="ReceiverService" method="receiveChanges" priority="3">
      The method receiveChanges() has an NPath complexity of 3304. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="332" endline="478" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\Mail" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="ReceiverService" method="receiveChanges" priority="3">
      The method receiveChanges() has 147 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="406" endline="408" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method receiveChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="409" endline="428" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method receiveChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="453" endline="455" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method receiveChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="456" endline="460" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method receiveChanges uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/ReceiverServiceFactory.php">
    <violation beginline="25" endline="25" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/SenderServiceFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/AbstractStorage.php">
    <violation beginline="13" endline="315" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="AbstractStorage" priority="3">
      The class AbstractStorage has 18 public methods. Consider refactoring AbstractStorage to keep number of public methods under 10.
    </violation>
    <violation beginline="94" endline="94" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="102" endline="102" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="112" endline="112" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="121" endline="121" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="155" endline="155" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="166" endline="166" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="178" endline="178" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="198" endline="198" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="216" endline="216" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="228" endline="228" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="228" endline="228" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$id'.
    </violation>
    <violation beginline="228" endline="228" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$value'.
    </violation>
    <violation beginline="239" endline="239" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Folder.php">
    <violation beginline="10" endline="205" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Folder" priority="3">
      The class Folder has 13 public methods. Consider refactoring Folder to keep number of public methods under 10.
    </violation>
    <violation beginline="44" endline="44" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method __construct has a boolean flag argument $selectable, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Folder/Maildir.php">
    <violation beginline="77" endline="131" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Folder" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="_buildFolderTree" priority="3">
      The method _buildFolderTree() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="77" endline="131" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Folder" externalInfoUrl="#" class="Maildir" method="_buildFolderTree" priority="1">
      The method _buildFolderTree is not named in camelCase.
    </violation>
    <violation beginline="82" endline="82" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_buildFolderTree'.
    </violation>
    <violation beginline="83" endline="83" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dh. Configured minimum length is 3.
    </violation>
    <violation beginline="84" endline="84" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_buildFolderTree'.
    </violation>
    <violation beginline="154" endline="154" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'getFolders'.
    </violation>
    <violation beginline="156" endline="156" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'getFolders'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Folder/Mbox.php">
    <violation beginline="78" endline="111" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Folder" externalInfoUrl="#" class="Mbox" method="_buildFolderTree" priority="1">
      The method _buildFolderTree is not named in camelCase.
    </violation>
    <violation beginline="85" endline="85" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_buildFolderTree'.
    </violation>
    <violation beginline="86" endline="86" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dh. Configured minimum length is 3.
    </violation>
    <violation beginline="87" endline="87" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_buildFolderTree'.
    </violation>
    <violation beginline="129" endline="129" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'getFolders'.
    </violation>
    <violation beginline="131" endline="131" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'getFolders'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Imap.php">
    <violation beginline="12" endline="504" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Imap" priority="3">
      The class Imap has 12 public methods. Consider refactoring Imap to keep number of public methods under 10.
    </violation>
    <violation beginline="12" endline="504" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Imap" priority="3">
      The class Imap has an overall complexity of 68 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="75" endline="78" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method countMessages uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="90" endline="90" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="105" endline="105" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="129" endline="129" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="149" endline="149" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="174" endline="207" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Imap" method="__construct" priority="3">
      The method __construct() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="174" endline="207" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Imap" method="__construct" priority="3">
      The method __construct() has an NPath complexity of 768. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="239" endline="239" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="259" endline="259" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="278" endline="278" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="300" endline="343" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Imap" method="getFolders" priority="3">
      The method getFolders() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="320" endline="322" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getFolders uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="390" endline="392" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createFolder uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="467" endline="467" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="483" endline="483" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="498" endline="498" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Maildir.php">
    <violation beginline="12" endline="400" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Maildir" priority="3">
      The class Maildir has an overall complexity of 64 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="66" endline="66" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$v'.
    </violation>
    <violation beginline="84" endline="99" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage" externalInfoUrl="#" class="Maildir" method="_getFileData" priority="1">
      The method _getFileData is not named in camelCase.
    </violation>
    <violation beginline="84" endline="84" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="107" endline="107" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="129" endline="129" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="151" endline="151" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="158" endline="158" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="181" endline="181" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="188" endline="188" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="235" endline="244" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage" externalInfoUrl="#" class="Maildir" method="_isMaildir" priority="1">
      The method _isMaildir is not named in camelCase.
    </violation>
    <violation beginline="252" endline="276" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage" externalInfoUrl="#" class="Maildir" method="_openMaildir" priority="1">
      The method _openMaildir is not named in camelCase.
    </violation>
    <violation beginline="258" endline="258" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_openMaildir'.
    </violation>
    <violation beginline="259" endline="259" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dh. Configured minimum length is 3.
    </violation>
    <violation beginline="260" endline="260" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_openMaildir'.
    </violation>
    <violation beginline="267" endline="267" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_openMaildir'.
    </violation>
    <violation beginline="269" endline="269" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_openMaildir'.
    </violation>
    <violation beginline="285" endline="326" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="_getMaildirFiles" priority="3">
      The method _getMaildirFiles() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="285" endline="326" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="_getMaildirFiles" priority="3">
      The method _getMaildirFiles() has an NPath complexity of 289. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="285" endline="326" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage" externalInfoUrl="#" class="Maildir" method="_getMaildirFiles" priority="1">
      The method _getMaildirFiles is not named in camelCase.
    </violation>
    <violation beginline="285" endline="285" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $dh. Configured minimum length is 3.
    </violation>
    <violation beginline="292" endline="292" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_getMaildirFiles'.
    </violation>
    <violation beginline="295" endline="295" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_getMaildirFiles'.
    </violation>
    <violation beginline="303" endline="303" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_getMaildirFiles'.
    </violation>
    <violation beginline="305" endline="305" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '_getMaildirFiles'.
    </violation>
    <violation beginline="354" endline="354" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="367" endline="367" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="390" endline="390" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Mbox.php">
    <violation beginline="18" endline="18" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="68" endline="68" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="90" endline="90" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="106" endline="106" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="151" endline="151" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="171" endline="171" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="217" endline="217" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method isMboxFile has a boolean flag argument $fileIsString, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="220" endline="220" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'isMboxFile'.
    </violation>
    <violation beginline="222" endline="222" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'isMboxFile'.
    </violation>
    <violation beginline="226" endline="228" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method isMboxFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="238" endline="238" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'isMboxFile'.
    </violation>
    <violation beginline="240" endline="240" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'isMboxFile'.
    </violation>
    <violation beginline="253" endline="295" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Mbox" method="openMboxFile" priority="3">
      The method openMboxFile() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="259" endline="259" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'openMboxFile'.
    </violation>
    <violation beginline="261" endline="261" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'openMboxFile'.
    </violation>
    <violation beginline="269" endline="269" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'openMboxFile'.
    </violation>
    <violation beginline="271" endline="271" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'openMboxFile'.
    </violation>
    <violation beginline="304" endline="304" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'close'.
    </violation>
    <violation beginline="306" endline="306" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'close'.
    </violation>
    <violation beginline="328" endline="328" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="344" endline="344" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="366" endline="366" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="395" endline="395" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '__wakeup'.
    </violation>
    <violation beginline="397" endline="397" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '__wakeup'.
    </violation>
    <violation beginline="401" endline="408" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __wakeup uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="402" endline="402" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '__wakeup'.
    </violation>
    <violation beginline="404" endline="404" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '__wakeup'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Message.php">
    <violation beginline="33" endline="33" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '__construct'.
    </violation>
    <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method '__construct'.
    </violation>
    <violation beginline="39" endline="41" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Part.php">
    <violation beginline="14" endline="459" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Part" priority="3">
      The class Part has 12 public methods. Consider refactoring Part to keep number of public methods under 10.
    </violation>
    <violation beginline="14" endline="459" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Part" priority="3">
      The class Part has an overall complexity of 62 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="79" endline="113" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Part" method="__construct" priority="3">
      The method __construct() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="96" endline="96" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Decode' in method '__construct'.
    </violation>
    <violation beginline="101" endline="107" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="103" endline="103" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Decode' in method '__construct'.
    </violation>
    <violation beginline="104" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="105" endline="105" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mail\Headers' in method '__construct'.
    </violation>
    <violation beginline="169" endline="193" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage" externalInfoUrl="#" class="Part" method="_cacheContent" priority="1">
      The method _cacheContent is not named in camelCase.
    </violation>
    <violation beginline="185" endline="185" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Decode' in method '_cacheContent'.
    </violation>
    <violation beginline="265" endline="265" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mail\Headers' in method 'getHeaders'.
    </violation>
    <violation beginline="266" endline="268" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getHeaders uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="302" endline="309" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="314" endline="319" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="345" endline="345" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Decode' in method 'getHeaderField'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Part/File.php">
    <violation beginline="16" endline="16" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="31" endline="106" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Part" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="File" method="__construct" priority="3">
      The method __construct() has a Cyclomatic Complexity of 21. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="31" endline="106" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Part" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="File" method="__construct" priority="3">
      The method __construct() has an NPath complexity of 30720. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="39" endline="41" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mail\Headers' in method '__construct'.
    </violation>
    <violation beginline="56" endline="58" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="57" endline="57" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mail\Headers' in method '__construct'.
    </violation>
    <violation beginline="63" endline="66" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Pop3.php">
    <violation beginline="43" endline="43" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="56" endline="56" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="75" endline="75" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="94" endline="94" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="105" endline="105" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mime\Decode' in method 'getRawContent'.
    </violation>
    <violation beginline="178" endline="178" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="192" endline="192" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="219" endline="219" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="264" endline="264" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Writable/Maildir.php">
    <violation beginline="16" endline="934" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Maildir" priority="3">
      The class Maildir has an overall complexity of 176 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="42" endline="56" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method initMaildir uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'initMaildir'.
    </violation>
    <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'initMaildir'.
    </violation>
    <violation beginline="52" endline="54" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method initMaildir uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="59" endline="59" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'initMaildir'.
    </violation>
    <violation beginline="61" endline="61" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'initMaildir'.
    </violation>
    <violation beginline="103" endline="170" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="createFolder" priority="3">
      The method createFolder() has a Cyclomatic Complexity of 15. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="103" endline="170" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="createFolder" priority="3">
      The method createFolder() has an NPath complexity of 3456. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="109" endline="111" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createFolder uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="156" endline="156" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'createFolder'.
    </violation>
    <violation beginline="158" endline="158" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'createFolder'.
    </violation>
    <violation beginline="161" endline="161" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'createFolder'.
    </violation>
    <violation beginline="178" endline="242" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="removeFolder" priority="3">
      The method removeFolder() has a Cyclomatic Complexity of 20. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="178" endline="242" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="removeFolder" priority="3">
      The method removeFolder() has an NPath complexity of 43520. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="253" endline="308" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="renameFolder" priority="3">
      The method renameFolder() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="253" endline="308" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="renameFolder" priority="3">
      The method renameFolder() has an NPath complexity of 1920. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="323" endline="331" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="#" class="Maildir" method="_createUniqueId" priority="1">
      The method _createUniqueId is not named in camelCase.
    </violation>
    <violation beginline="325" endline="325" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="344" endline="388" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="#" class="Maildir" method="_createTmpFile" priority="1">
      The method _createTmpFile is not named in camelCase.
    </violation>
    <violation beginline="348" endline="350" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _createTmpFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="369" endline="369" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="397" endline="422" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="#" class="Maildir" method="_getInfoString" priority="1">
      The method _getInfoString is not named in camelCase.
    </violation>
    <violation beginline="435" endline="435" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method appendMessage has a boolean flag argument $recent, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="435" endline="493" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="appendMessage" priority="3">
      The method appendMessage() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="435" endline="493" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="appendMessage" priority="3">
      The method appendMessage() has an NPath complexity of 2304. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="458" endline="460" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method appendMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="479" endline="479" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'appendMessage'.
    </violation>
    <violation beginline="481" endline="481" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'appendMessage'.
    </violation>
    <violation beginline="502" endline="563" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="copyMessage" priority="3">
      The method copyMessage() has a Cyclomatic Complexity of 13. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="502" endline="563" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="copyMessage" priority="3">
      The method copyMessage() has an NPath complexity of 1152. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="502" endline="502" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="544" endline="544" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'copyMessage'.
    </violation>
    <violation beginline="546" endline="546" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'copyMessage'.
    </violation>
    <violation beginline="572" endline="572" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="613" endline="613" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'moveMessage'.
    </violation>
    <violation beginline="615" endline="615" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'moveMessage'.
    </violation>
    <violation beginline="635" endline="635" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="643" endline="643" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'setFlags'.
    </violation>
    <violation beginline="645" endline="645" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'setFlags'.
    </violation>
    <violation beginline="662" endline="662" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="670" endline="670" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'removeMessage'.
    </violation>
    <violation beginline="672" endline="672" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'removeMessage'.
    </violation>
    <violation beginline="707" endline="707" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getQuota has a boolean flag argument $fromStorage, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="710" endline="710" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'getQuota'.
    </violation>
    <violation beginline="711" endline="711" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="712" endline="712" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'getQuota'.
    </violation>
    <violation beginline="738" endline="831" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="_calculateMaildirsize" priority="3">
      The method _calculateMaildirsize() has a Cyclomatic Complexity of 21. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="738" endline="831" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="_calculateMaildirsize" priority="3">
      The method _calculateMaildirsize() has an NPath complexity of 13905. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="738" endline="831" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="#" class="Maildir" method="_calculateMaildirsize" priority="1">
      The method _calculateMaildirsize is not named in camelCase.
    </violation>
    <violation beginline="746" endline="752" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _calculateMaildirsize uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="759" endline="761" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _calculateMaildirsize uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="808" endline="808" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="838" endline="838" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method _calculateQuota has a boolean flag argument $forceRecalc, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="838" endline="909" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Maildir" method="_calculateQuota" priority="3">
      The method _calculateQuota() has a Cyclomatic Complexity of 25. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="838" endline="909" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Maildir" method="_calculateQuota" priority="3">
      The method _calculateQuota() has an NPath complexity of 1248. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="838" endline="909" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="#" class="Maildir" method="_calculateQuota" priority="1">
      The method _calculateQuota is not named in camelCase.
    </violation>
    <violation beginline="840" endline="840" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fh. Configured minimum length is 3.
    </violation>
    <violation beginline="860" endline="881" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _calculateQuota uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="864" endline="874" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method _calculateQuota uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="911" endline="919" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mail\Storage\Writable" externalInfoUrl="#" class="Maildir" method="_addQuotaEntry" priority="1">
      The method _addQuotaEntry is not named in camelCase.
    </violation>
    <violation beginline="929" endline="929" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method checkQuota has a boolean flag argument $detailedResponse, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="929" endline="929" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method checkQuota has a boolean flag argument $forceRecalc, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Storage/Writable/WritableInterface.php">
    <violation beginline="59" endline="59" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="68" endline="68" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="79" endline="79" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Transport/BulkSmtpFactory.php">
    <violation beginline="77" endline="80" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createService uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Transport/BulkTransportFactory.php">
    <violation beginline="27" endline="27" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$transport'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Transport/Envelope.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
    <violation beginline="58" endline="58" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Transport/Smtp.php">
    <violation beginline="20" endline="377" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\Mail\Transport" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="Smtp" priority="2">
      The class Smtp has a coupling between objects value of 14. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="145" endline="148" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Mail\Transport" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="Smtp" method="getAutoDisconnect" priority="4">
      The 'getAutoDisconnect()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="227" endline="230" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method send uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Transport/SmtpFactory.php">
    <violation beginline="64" endline="67" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createService uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mail/Transport/TransportFactory.php">
    <violation beginline="28" endline="28" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$transport'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mime/Decode.php">
    <violation beginline="34" endline="34" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $p. Configured minimum length is 3.
    </violation>
    <violation beginline="69" endline="84" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessageStruct" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="69" endline="84" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessageStruct" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="99" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method splitMessage has a boolean flag argument $strict, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="99" endline="139" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Decode" method="splitMessage" priority="3">
      The method splitMessage() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="99" endline="139" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Decode" method="splitMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="132" endline="136" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method splitMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="133" endline="133" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'splitMessage'.
    </violation>
    <violation beginline="135" endline="135" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Stdlib\ErrorHandler' in method 'splitMessage'.
    </violation>
    <violation beginline="138" endline="138" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Mail\Headers' in method 'splitMessage'.
    </violation>
    <violation beginline="162" endline="202" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Decode" method="splitHeaderField" priority="3">
      The method splitHeaderField() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="196" endline="198" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method splitHeaderField uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mime/Message.php">
    <violation beginline="103" endline="129" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="103" endline="129" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="generateMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="111" endline="126" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method generateMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="149" endline="152" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="getPartHeaders" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="149" endline="152" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="getPartHeaders" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="161" endline="164" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="getPartContent" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="161" endline="164" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="getPartContent" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="176" endline="206" rule="CamelCaseMethodName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="_disassembleMime" priority="1">
      The method _disassembleMime is not named in camelCase.
    </violation>
    <violation beginline="183" endline="183" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $p. Configured minimum length is 3.
    </violation>
    <violation beginline="218" endline="293" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Message" method="createFromMessage" priority="3">
      The method createFromMessage() has a Cyclomatic Complexity of 17. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="218" endline="293" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="createFromMessage" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="218" endline="293" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="createFromMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="218" endline="293" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Message" method="createFromMessage" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="220" endline="220" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mime\Decode' in method 'createFromMessage'.
    </violation>
    <violation beginline="236" endline="236" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mime\Decode' in method 'createFromMessage'.
    </violation>
    <violation beginline="272" endline="274" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method createFromMessage uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mime/Mime.php">
    <violation beginline="12" endline="426" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="Mime" priority="3">
      The class Mime has 11 public methods. Consider refactoring Mime to keep number of public methods under 10.
    </violation>
    <violation beginline="249" endline="251" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method encodeQuotedPrintableHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="282" endline="284" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getNextQuotedPrintableToken uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="348" endline="350" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="361" endline="376" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="encode" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="361" endline="376" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="encode" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="361" endline="376" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="encode" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="394" endline="397" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="boundaryLine" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="394" endline="397" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="boundaryLine" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="394" endline="397" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="boundaryLine" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="405" endline="408" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="mimeEnd" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="405" endline="408" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="mimeEnd" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="405" endline="408" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Mime" method="mimeEnd" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mime/Part.php">
    <violation beginline="12" endline="605" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Part" priority="3">
      The class Part has an overall complexity of 61 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="33" endline="33" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="193" endline="193" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="392" endline="392" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setIsStream has a boolean flag argument $isStream, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="403" endline="406" rule="BooleanGetMethodName" ruleset="Naming Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="Part" method="getIsStream" priority="4">
      The 'getIsStream()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
    <violation beginline="452" endline="499" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getEncodedStream" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="452" endline="499" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getEncodedStream" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="452" endline="499" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getEncodedStream" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="507" endline="521" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getContent" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="507" endline="521" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getContent" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="507" endline="521" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getContent" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="511" endline="511" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $encodedStreamContents. Keep variable name length under 20.
    </violation>
    <violation beginline="520" endline="520" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class 'Netric\Mime\Mime' in method 'getContent'.
    </violation>
    <violation beginline="543" endline="588" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Part" method="getHeadersArray" priority="3">
      The method getHeadersArray() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="543" endline="588" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mime" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Part" method="getHeadersArray" priority="3">
      The method getHeadersArray() has an NPath complexity of 384. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="543" endline="588" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getHeadersArray" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="543" endline="588" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getHeadersArray" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="596" endline="604" rule="CamelCaseParameterName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getHeaders" priority="1">
      The parameter $EOL is not named in camelCase.
    </violation>
    <violation beginline="596" endline="604" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getHeaders" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
    <violation beginline="596" endline="604" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\Mime" externalInfoUrl="#" class="Part" method="getHeaders" priority="1">
      The variable $EOL is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mvc/AbstractController.php">
    <violation beginline="172" endline="212" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mvc" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="AbstractController" method="sendOutputJson" priority="3">
      The method sendOutputJson() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="222" endline="222" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$enc'.
    </violation>
    <violation beginline="228" endline="236" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendOutputXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="303" endline="307" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method makeXmlFromArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="342" endline="342" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$key'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Mvc/Router.php">
    <violation beginline="168" endline="246" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Mvc" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Router" method="runLegacyWithoutFactory" priority="3">
      The method runLegacyWithoutFactory() has a Cyclomatic Complexity of 20. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="168" endline="246" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\Mvc" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="Router" method="runLegacyWithoutFactory" priority="3">
      The method runLegacyWithoutFactory() has an NPath complexity of 3860. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="168" endline="246" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mvc" externalInfoUrl="#" class="Router" method="runLegacyWithoutFactory" priority="1">
      runLegacyWithoutFactory accesses the super-global variable $_REQUEST.
    </violation>
    <violation beginline="168" endline="246" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mvc" externalInfoUrl="#" class="Router" method="runLegacyWithoutFactory" priority="1">
      runLegacyWithoutFactory accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="168" endline="246" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mvc" externalInfoUrl="#" class="Router" method="runLegacyWithoutFactory" priority="1">
      runLegacyWithoutFactory accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="168" endline="246" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mvc" externalInfoUrl="#" class="Router" method="runLegacyWithoutFactory" priority="1">
      runLegacyWithoutFactory accesses the super-global variable $_POST.
    </violation>
    <violation beginline="168" endline="246" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mvc" externalInfoUrl="#" class="Router" method="runLegacyWithoutFactory" priority="1">
      runLegacyWithoutFactory accesses the super-global variable $_GET.
    </violation>
    <violation beginline="168" endline="246" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Mvc" externalInfoUrl="#" class="Router" method="runLegacyWithoutFactory" priority="1">
      runLegacyWithoutFactory accesses the super-global variable $_REQUEST.
    </violation>
    <violation beginline="180" endline="182" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method runLegacyWithoutFactory uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="239" endline="242" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method runLegacyWithoutFactory uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="263" endline="272" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setControllerAndGetAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/PHPUnit/XHProfTestListener.php">
    <violation beginline="38" endline="255" rule="TooManyPublicMethods" ruleset="Code Size Rules" package="Netric\PHPUnit" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods" class="XHProfTestListener" priority="3">
      The class XHProfTestListener has 11 public methods. Consider refactoring XHProfTestListener to keep number of public methods under 10.
    </violation>
    <violation beginline="82" endline="82" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $t. Configured minimum length is 3.
    </violation>
    <violation beginline="82" endline="82" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="82" endline="82" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$t'.
    </violation>
    <violation beginline="82" endline="82" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$time'.
    </violation>
    <violation beginline="93" endline="93" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $e. Configured minimum length is 3.
    </violation>
    <violation beginline="93" endline="93" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="93" endline="93" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$e'.
    </violation>
    <violation beginline="93" endline="93" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$time'.
    </violation>
    <violation beginline="104" endline="104" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $e. Configured minimum length is 3.
    </violation>
    <violation beginline="104" endline="104" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="104" endline="104" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$e'.
    </violation>
    <violation beginline="104" endline="104" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$time'.
    </violation>
    <violation beginline="115" endline="115" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $t. Configured minimum length is 3.
    </violation>
    <violation beginline="115" endline="115" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="115" endline="115" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$t'.
    </violation>
    <violation beginline="115" endline="115" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$time'.
    </violation>
    <violation beginline="126" endline="126" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $t. Configured minimum length is 3.
    </violation>
    <violation beginline="126" endline="126" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="126" endline="126" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$t'.
    </violation>
    <violation beginline="126" endline="126" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$time'.
    </violation>
    <violation beginline="137" endline="137" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $t. Configured minimum length is 3.
    </violation>
    <violation beginline="137" endline="137" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="137" endline="137" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$t'.
    </violation>
    <violation beginline="137" endline="137" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$time'.
    </violation>
    <violation beginline="146" endline="146" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$test'.
    </violation>
    <violation beginline="154" endline="159" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method startTest uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="171" endline="207" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\PHPUnit" externalInfoUrl="#" class="XHProfTestListener" method="endTest" priority="1">
      The variable $test_name is not named in camelCase.
    </violation>
    <violation beginline="171" endline="207" rule="CamelCaseVariableName" ruleset="Controversial Rules" package="Netric\PHPUnit" externalInfoUrl="#" class="XHProfTestListener" method="endTest" priority="1">
      The variable $test_name is not named in camelCase.
    </violation>
    <violation beginline="214" endline="214" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$suite'.
    </violation>
    <violation beginline="224" endline="224" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$suite'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/PaymentGateway/AuthDotNetGateway.php">
    <violation beginline="14" endline="604" rule="CouplingBetweenObjects" ruleset="Design Rules" package="Netric\PaymentGateway" externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects" class="AuthDotNetGateway" priority="2">
      The class AuthDotNetGateway has a coupling between objects value of 28. Consider to reduce the number of dependencies under 13.
    </violation>
    <violation beginline="482" endline="482" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$refId'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Permissions/Dacl.php">
    <violation beginline="16" endline="359" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\Permissions" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="Dacl" priority="3">
      The class Dacl has an overall complexity of 59 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="201" endline="201" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ent'.
    </violation>
    <violation beginline="204" endline="214" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method allowUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="226" endline="226" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$ent'.
    </violation>
    <violation beginline="229" endline="239" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method allowGroup uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="292" endline="292" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method isAllowed has a boolean flag argument $isowner, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="292" endline="331" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Permissions" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="Dacl" method="isAllowed" priority="3">
      The method isAllowed() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="301" endline="301" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$entry'.
    </violation>
    <violation beginline="312" endline="328" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method isAllowed uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="343" endline="343" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$entry'.
    </violation>
    <violation beginline="348" endline="355" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method groupIsAllowed uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Permissions/Dacl/Entry.php">
    <violation beginline="38" endline="38" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Permissions/DaclLoader.php">
    <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getForEntity has a boolean flag argument $fallBackToObjType, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="46" endline="83" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Permissions" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="DaclLoader" method="getForEntity" priority="3">
      The method getForEntity() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="121" endline="121" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method byName has a boolean flag argument $cache, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="121" endline="121" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$key'.
    </violation>
    <violation beginline="121" endline="121" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$cache'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Permissions/DaclLoaderFactory.php">
    <violation beginline="18" endline="18" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Request/ConsoleRequest.php">
    <violation beginline="61" endline="107" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="ConsoleRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="61" endline="107" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="ConsoleRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="61" endline="107" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="ConsoleRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_ENV.
    </violation>
    <violation beginline="210" endline="247" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\Request" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="ConsoleRequest" method="getOptionsFromArgs" priority="3">
      The method getOptionsFromArgs() has a Cyclomatic Complexity of 12. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="297" endline="297" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$signo'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Request/HttpRequest.php">
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_FILES.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_FILES.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_FILES.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_COOKIE.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_POST.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_GET.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
    <violation beginline="54" endline="76" rule="Superglobals" ruleset="Controversial Rules" package="Netric\Request" externalInfoUrl="#" class="HttpRequest" method="__construct" priority="1">
      __construct accesses the super-global variable $_SERVER.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Request/RequestFactory.php">
    <violation beginline="26" endline="26" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="28" endline="28" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
      Avoid using static access to class '\Netric\Console\Console' in method 'createService'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/ServiceManager/AbstractPluginManager.php">
    <violation beginline="76" endline="82" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/ServiceManager/AbstractServiceManager.php">
    <violation beginline="91" endline="91" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method initializeServiceByFactory has a boolean flag argument $bCache, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="118" endline="124" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method initializeServiceByFactory uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="128" endline="134" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method initializeServiceByFactory uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="178" endline="181" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getServiceFactoryPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="197" endline="199" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method isLoaded uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/ServiceManager/AccountServiceFactoryInterface.php">
    <violation beginline="19" endline="19" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/ServiceManager/ApplicationServiceFactoryInterface.php">
    <violation beginline="19" endline="19" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/ServiceManager/Test/ServiceFactory.php">
    <violation beginline="23" endline="23" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Settings/Settings.php">
    <violation beginline="106" endline="106" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$teamId'.
    </violation>
    <violation beginline="106" endline="106" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$name'.
    </violation>
    <violation beginline="111" endline="111" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$teamId'.
    </violation>
    <violation beginline="111" endline="111" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$name'.
    </violation>
    <violation beginline="111" endline="111" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$value'.
    </violation>
    <violation beginline="214" endline="214" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$teamId'.
    </violation>
    <violation beginline="226" endline="228" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="234" endline="236" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="249" endline="249" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$teamId'.
    </violation>
    <violation beginline="258" endline="260" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Settings/SettingsFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Stats/StatsPublisher.php">
    <violation beginline="89" endline="120" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setup uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="94" endline="94" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $applicationEnvironment. Keep variable name length under 20.
    </violation>
    <violation beginline="116" endline="119" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method setup uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="202" endline="207" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method updateStat uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="231" endline="235" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method queueStats uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="290" endline="290" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $fp. Configured minimum length is 3.
    </violation>
    <violation beginline="290" endline="290" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$errno'.
    </violation>
    <violation beginline="290" endline="290" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$errstr'.
    </violation>
    <violation beginline="314" endline="314" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $i. Configured minimum length is 3.
    </violation>
    <violation beginline="324" endline="326" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method sendLines uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Stdlib/AbstractOptions.php">
    <violation beginline="11" endline="157" rule="CamelCasePropertyName" ruleset="Controversial Rules" package="Netric\Stdlib" externalInfoUrl="#" class="AbstractOptions" priority="1">
      The property $__strictMode__ is not named in camelCase.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/Stdlib/ErrorHandler.php">
    <violation beginline="59" endline="59" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method stop has a boolean flag argument $throw, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/AbstractAction.php">
    <violation beginline="22" endline="627" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="AbstractAction" priority="3">
      The class AbstractAction has an overall complexity of 86 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="147" endline="200" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="AbstractAction" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 16. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="147" endline="200" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="AbstractAction" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 2592. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="242" endline="242" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="279" endline="316" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="AbstractAction" method="addAction" priority="3">
      The method addAction() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="313" endline="315" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method addAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="378" endline="422" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="AbstractAction" method="getParams" priority="3">
      The method getParams() has a Cyclomatic Complexity of 14. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="416" endline="418" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getParams uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="514" endline="542" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getParamVariableFieldValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/ActionFactory.php">
    <violation beginline="32" endline="32" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="73" endline="75" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method create uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/ActionInterface.php">
    <violation beginline="69" endline="69" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/ApprovalAction.php">
    <violation beginline="27" endline="27" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$params'.
    </violation>
    <violation beginline="27" endline="27" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$entity'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/CreateEntityAction.php">
    <violation beginline="44" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/SendEmailAction.php">
    <violation beginline="59" endline="156" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="SendEmailAction" method="execute" priority="3">
      The method execute() has a Cyclomatic Complexity of 22. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="59" endline="156" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="SendEmailAction" method="execute" priority="3">
      The method execute() has an NPath complexity of 20250. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="84" endline="89" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="96" endline="96" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to. Configured minimum length is 3.
    </violation>
    <violation beginline="152" endline="155" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/StopWorkflowAction.php">
    <violation beginline="26" endline="26" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$params'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/TestAction.php">
    <violation beginline="41" endline="41" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$params'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/UpdateFieldAction.php">
    <violation beginline="49" endline="51" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/Action/WaitConditionAction.php">
    <violation beginline="122" endline="122" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$pre'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/DataMapper/DataMapperFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/DataMapper/DataMapperInterface.php">
    <violation beginline="40" endline="40" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="50" endline="50" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getWorkFlows has a boolean flag argument $onlyActive, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/DataMapper/WorkFlowRdbDataMapper.php">
    <violation beginline="20" endline="722" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow\DataMapper" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="WorkFlowRdbDataMapper" priority="3">
      The class WorkFlowRdbDataMapper has an overall complexity of 75 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="84" endline="86" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method save uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="105" endline="107" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method save uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="190" endline="190" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method getWorkFlows has a boolean flag argument $onlyActive, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="336" endline="338" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method saveWorkFlowInstance uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="355" endline="355" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $workflowInstanceEntity. Keep variable name length under 20.
    </violation>
    <violation beginline="371" endline="371" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$row'.
    </violation>
    <violation beginline="421" endline="424" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getActionsArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="442" endline="444" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getActionsArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="584" endline="584" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$i'.
    </violation>
    <violation beginline="612" endline="612" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$i'.
    </violation>
    <violation beginline="668" endline="671" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method getScheduledActions uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/WorkFlow.php">
    <violation beginline="18" endline="589" rule="TooManyFields" ruleset="Code Size Rules" package="Netric\WorkFlow" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanyfields" class="WorkFlow" priority="3">
      The class WorkFlow has 18 fields. Consider redesigning WorkFlow to keep the number of fields under 15.
    </violation>
    <violation beginline="18" endline="589" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="WorkFlow" priority="3">
      The class WorkFlow has an overall complexity of 72 which is very high. The configured complexity threshold is 50.
    </violation>
    <violation beginline="44" endline="44" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="187" endline="288" rule="CyclomaticComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow" externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" class="WorkFlow" method="fromArray" priority="3">
      The method fromArray() has a Cyclomatic Complexity of 32. The configured cyclomatic complexity threshold is 10.
    </violation>
    <violation beginline="187" endline="288" rule="NPathComplexity" ruleset="Code Size Rules" package="Netric\WorkFlow" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="WorkFlow" method="fromArray" priority="3">
      The method fromArray() has an NPath complexity of 18895680. The configured NPath complexity threshold is 200.
    </violation>
    <violation beginline="187" endline="288" rule="ExcessiveMethodLength" ruleset="Code Size Rules" package="Netric\WorkFlow" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength" class="WorkFlow" method="fromArray" priority="3">
      The method fromArray() has 102 lines of code. Current threshold is set to 100. Avoid really long methods.
    </violation>
    <violation beginline="244" endline="246" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method fromArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="344" endline="344" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="485" endline="487" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method addAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="531" endline="531" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setOnlyOnConditionsUnmet has a boolean flag argument $value, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="541" endline="541" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setOnUpdate has a boolean flag argument $listen, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="551" endline="551" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setOnCreate has a boolean flag argument $listen, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="561" endline="561" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setOnDelete has a boolean flag argument $listen, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
    <violation beginline="571" endline="571" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method setOnDaily has a boolean flag argument $listen, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/WorkFlowInstance.php">
    <violation beginline="20" endline="20" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="89" endline="89" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/WorkFlowManager.php">
    <violation beginline="154" endline="154" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id. Configured minimum length is 3.
    </violation>
    <violation beginline="218" endline="218" rule="LongVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable" priority="3">
      Avoid excessively long variable names like $conditionFieldChanged. Keep variable name length under 20.
    </violation>
    <violation beginline="273" endline="273" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
      The method executeAction has a boolean flag argument $purgeScheduled, which is a certain sign of a Single Responsibility Principle violation.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkFlow/WorkFlowManagerFactory.php">
    <violation beginline="29" endline="29" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
    <violation beginline="31" endline="31" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$user'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkQueue.php">
    <violation beginline="26" endline="26" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$name'.
    </violation>
    <violation beginline="26" endline="26" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$data'.
    </violation>
    <violation beginline="30" endline="30" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$name'.
    </violation>
    <violation beginline="34" endline="34" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$name'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkerMan/Queue/Gearman.php">
    <violation beginline="125" endline="140" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method dispatchJobs uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="135" endline="139" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method dispatchJobs uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
    <violation beginline="137" endline="137" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$returnCode'.
    </violation>
    <violation beginline="192" endline="192" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$returnCode'.
    </violation>
    <violation beginline="199" endline="199" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$listenerName'.
    </violation>
    <violation beginline="199" endline="199" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$worker'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkerMan/SchedulerService.php">
    <violation beginline="151" endline="151" rule="UnusedFormalParameter" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" priority="3">
      Avoid unused parameters such as '$timeRunBy'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkerMan/SchedulerServiceFactory.php">
    <violation beginline="21" endline="21" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkerMan/Worker/ScheduleRunnerWorker.php">
    <violation beginline="50" endline="52" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#elseexpression" priority="1">
      The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkerMan/Worker/TestWorker.php">
    <violation beginline="34" endline="34" rule="UnusedLocalVariable" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" priority="3">
      Avoid unused local variables such as '$application'.
    </violation>
  </file>
  <file name="/var/www/html/src/Netric/WorkerMan/WorkerServiceFactory.php">
    <violation beginline="24" endline="24" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $sl. Configured minimum length is 3.
    </violation>
  </file>
</pmd>
