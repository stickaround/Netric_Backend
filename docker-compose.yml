version: "3.4"

services:
  netric_server:
    build:
      context: ./
      target: development
      dockerfile: ./Dockerfile
    ports:
      - "8081:80"
    environment:
      APPLICATION_ENV: development
      RUN_SETUP_INSTALL: 1
      PHP_IDE_CONFIG: "serverName=php.ide.config"
      XDEBUG_TRIGGER: "yes"
    volumes:
      - .:/var/www/html/
    depends_on:
      - memcached
      - gearmand
      - db1
      - objectstorage
    entrypoint: 'bash -c "rm -f composer.lock && composer install && /start.sh"'

  netric_daemon:
    build:
      context: ./
      target: development
      dockerfile: ./Dockerfile
    entrypoint: /start-daemon.sh
    volumes:
      - ./:/var/www/html/
    environment:
      APPLICATION_ENV: development
      APPLICATION_VER: daemon-dev
    depends_on:
      - memcached
      - gearmand
      - db1
      - objectstorage

  thrift:
    image: dockerhub.aereus.com/thrift:development
    volumes:
      - ./thrift:/data/thrift
      - ./src/ThriftGen:/data/thrift-out
    environment:
      THRIFT_FILE: netric.thrift
      THRIFT_LANGUAGE: php:server

  # api server used when developing the client locally
  api:
    image: dockerhub.aereus.com/api_netric_com
    ports:
      - "80:3001"
    environment: 
      NODE_ENV: devdependency
      APPLICATION_ENV: devdependency
        
  memcached:
    image: memcached

  gearmand:
    image: kendu/gearman
    # environment:
    #   PGHOST: db1
    #   PGPORT: 5432
    #   PGUSER: vagrant
    #   PGPASSWORD: vagrant
    #   PGDATABASE: netric
    # command: "-q Postgres --libpq-table=gearman_queue --verbose DEBUG"

  db1:
    image: dockerhub.aereus.com/pgsql:latest
    environment:
      POSTGRES_USER: vagrant
      POSTGRES_PASSWORD: vagrant
      POSTGRES_DB: netric
    command:
      [
        "-c",
        "shared_buffers=256MB",
        "-c",
        "max_connections=100",
        "-c",
        "synchronous_commit=off",
        "-c",
        "fsync=off",
        "-c",
        "full_page_writes=off",
      ]
    ports:
      - "5432:5432"

  objectstorage:
    image: dockerhub.aereus.com/objectstoragesvc:latest
    environment:
      - APPLICATION_ENV=devdependency

  notificationpusher:
    image: dockerhub.aereus.com/notificationpushersvc:latest
    ports:
      - "8080:80"
    depends_on:
      - pgsql
    environment:
      - APPLICATION_ENV=development
      - RUN_SETUP_UPDATE=1

  pgsql:
    image: postgres
    environment:
      POSTGRES_USER: notpush
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notificationpusher
