<?php
require_once("lib/Button.awp");
require_once("users/user_functions.php");

class CPopup
{
	var $menuName;
	var $mBuf;
	var $mWidth;
	var $mTitle;
	
	function CPopup($name, $title, $width=NULL, $height=NULL, $x=NULL, $y=NULL)
	{
		global $CPopup_JS;
		
		if ($CPopup_JS == false)
		{
			print($this->PrintJSFunction());
			$CPopup_JS = true;
		}
		if ($width)
			$this->mWidth = $width;
		
		$this->mTitle = $title;
		$this->menuName = $name;
	}
	
	function PrintJSFunction()
	{
		return "<script language=\"javascript\" type=\"text/javascript\">
				function TPopup(mname, display, x, y)
				{
					fm = document.getElementById(mname);
					
					// Get window height
					var fullWidth = 0, fullHeight = 0;
					if( typeof( window.innerWidth ) == 'number' ) 
					{
						//Non-IE
						fullWidth = window.innerWidth;
						fullHeight = window.innerHeight;
					} 
					else if( document.documentElement &&
					  (document.documentElement.clientWidth || document.documentElement.clientHeight)) 
					{
						//IE 6+ in 'standards compliant mode'
						fullWidth = document.documentElement.clientWidth;
						fullHeight = document.documentElement.clientHeight;
					} 
					else if(document.body && (document.body.clientWidth || document.body.clientHeight)) 
					{
						//IE 4 compatible
						fullWidth = document.body.clientWidth;
						fullHeight = document.body.clientHeight;
					}

					if (display == \"hidden\")
					{
						fm.style.visibility = \"hidden\";
					}
					else
					{
						if (x && y)
						{
							fm.style.top = y;
							fm.style.left = x;

						}
						else
						{
							fm.style.top = (fullHeight/2) -  (fm.offsetHeight/2);
							fm.style.left = (fullWidth/2) -  (fm.offsetWidth/2);
						}

						fm.style.visibility = \"visible\";
					}
					
				}
				</script>";
	}
	
	/***********************************************************************************
	*	Function:	CreateImageMenu
	*	Purpose:	Create full menu by combining div tags, name, and menu table
	*	Parameters:
	*				1. img_std - The main image to use for menu button
	*				2. img_over (optional) - On mouse over image
	*				3. img_click (optional) - On click image
	*				4. cache (optional) - set to true if you wish to print div tags later
	*				   If you set this to true, result of ReturnDiv() must be stored and 
	*				   printed in the calling script
	************************************************************************************/
	function CreateImageMenu($img_std = NULL, $img_over = NULL, $cache = false)
	{
		$name = $this->menuName ;

		$buf = "<img src='$img_std' 
				  onClick=\"TPopup('$name', 'visible', NULL, NULL)\" border='0'>";

		if ($cache == false)
			$buf .= $this->ReturnDiv($name);
			
		return $buf;
	}
	
	/***********************************************************************************
	*	Function:	PrintImageMenu
	*	Purpose:	Prints image and menu for image type drop up/down
	*	Parameters:
	*				1. img_std - The main image to use for menu button
	*				2. img_over (optional) - On mouse over image
	*				3. img_click (optional) - On click image
	*				4. cache (optional) - set to true if you wish to print div tags later
	*				   If you set this to true, result of ReturnDiv() must be stored and 
	*				   printed in the calling script
	************************************************************************************/
	function PrintImageMenu($img_std, $img_over = NULL, $cache = false)
	{
		echo $this->CreateImageMenu($img_std, $img_over, $cache);

	}
	
	/***********************************************************************************
	*	Function:	CreateButtonMenu
	*	Purpose:	Create full menu by combining div tags, name, and menu table
	*	Parameters:
	*				1. value - value of button
	************************************************************************************/
	function CreateButtonMenu($value, $x='', $y='', $other='')
	{
		$name = $this->menuName ;
		/*
		$buf = "<input type='button' value='$value' $other
				  onClick=\"TPopup('$name', 'visible', '$x', '$y')\">";
		*/
		
		$buf = ButtonCreate($value, "TPopup('$name', 'visible', '$x', '$y')");
		if ($cache == false)
			$buf .= $this->ReturnDiv($name);
			
		return $buf;
	}
	
	/***********************************************************************************
	*	Function:	PrintImageMenu
	*	Purpose:	Prints image and menu for image type drop up/down
	*	Parameters:
	*				1. img_std - The main image to use for menu button
	*				2. img_over (optional) - On mouse over image
	*				3. img_click (optional) - On click image
	*				4. cache (optional) - set to true if you wish to print div tags later
	*				   If you set this to true, result of ReturnDiv() must be stored and 
	*				   printed in the calling script
	************************************************************************************/
	function PrintButtonMenu($value, $x='', $y='', $other='')
	{
		echo $this->CreateButtonMenu($value, $x, $y, $other);

	}
	
	/***********************************************************************************
	*	Div tags mignt need to be printed outside of any table elements
	************************************************************************************/
	function ReturnDiv()
	{
		$name = $this->menuName ;
		$width = $this->mWidth;
		$buf = "<DIV STYLE=\"position: absolute; left:0px; top:0px; visibility:hidden; z-index:2;\" id=\"$name\">";
		$buf .= "<table border='1' bgcolor='E3E3E3' cellpadding='0' cellspacing='0'
					style='border-bottom-color:#CCCCCC; border-left-color:#E3E3E3; border-right-color:#CCCCCC; border-top-color:#E3E3E3;'>
				 <tr><td>
				 <table border='0' bgcolor='E3E3E3' cellpadding='1' cellspacing='0'>
					<tr>
					 <td bgcolor='#336699'>
					 	<table border='0' width='100%'>
							<tr>
								<td align='left' style='color:white;font-weight:bold;'>".$this->mTitle."</td>
								<td align='right'><img src='/images/closex.gif' border='0' 
									onClick=\"TPopup('$name', 'hidden')\">
					 			</td>
							</tr>
						</table>
					  </td>
					</tr>
					<tr><td bgcolor='#CCCCCC'>";
		$buf .= $this->mBuf;
		$buf .= "</td></tr></table></td></tr></table>";
		$buf .=	"</DIV>";
		return $buf;
	}
	
	/***********************************************************************************
	*	Add to buffer
	************************************************************************************/
	function AddToBuf($buf)
	{
		$this->mBuf = $buf;
	}
}
?>
